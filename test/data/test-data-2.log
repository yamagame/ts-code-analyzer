SourceFile
  SyntaxList
    ImportDeclaration
SourceFile/SyntaxList/ImportDeclaration import fs from 'fs';
      ImportKeyword - import
      ImportClause
        Identifier - fs
SourceFile/SyntaxList/ImportDeclaration/ImportClause/Identifier fs
      FromKeyword
      StringLiteral
      SemicolonToken
    ImportDeclaration
SourceFile/SyntaxList/ImportDeclaration import * as ts from 'typescript';
      ImportKeyword - import
      ImportClause
        NamespaceImport
          AsteriskToken
          AsKeyword
          Identifier - ts
SourceFile/SyntaxList/ImportDeclaration/ImportClause/NamespaceImport/Identifier ts
      FromKeyword
      StringLiteral
      SemicolonToken
    ImportDeclaration
SourceFile/SyntaxList/ImportDeclaration import yargs from 'yargs';
      ImportKeyword - import
      ImportClause
        Identifier - yargs
SourceFile/SyntaxList/ImportDeclaration/ImportClause/Identifier yargs
      FromKeyword
      StringLiteral
      SemicolonToken
    ImportDeclaration
SourceFile/SyntaxList/ImportDeclaration import { hideBin } from 'yargs/helpers';
      ImportKeyword - import
      ImportClause
        NamedImports
          OpenBraceToken
          SyntaxList
            ImportSpecifier
              Identifier - hideBin
SourceFile/SyntaxList/ImportDeclaration/ImportClause/NamedImports/SyntaxList/ImportSpecifier/Identifier hideBin
          CloseBraceToken
      FromKeyword
      StringLiteral
      SemicolonToken
    TypeAliasDeclaration
SourceFile/SyntaxList/TypeAliasDeclaration export type AstInfo = {
  element: boolean;
  level: number;
  kind: string;
  line: number;
  endl: number;
  pos: number;
  end: number;
  text: string;
  tsNode: ts.Node;
  hasNodes: boolean;
};
      SyntaxList
        ExportKeyword
SourceFile/SyntaxList/TypeAliasDeclaration/SyntaxList/ExportKeyword export
      TypeKeyword
      Identifier - AstInfo
SourceFile/SyntaxList/TypeAliasDeclaration/Identifier AstInfo
      EqualsToken
      TypeLiteral
        OpenBraceToken
        SyntaxList
          PropertySignature
            Identifier - element
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier element
            ColonToken
            BooleanKeyword
            SemicolonToken
          PropertySignature
            Identifier - level
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier level
            ColonToken
            NumberKeyword
            SemicolonToken
          PropertySignature
            Identifier - kind
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier kind
            ColonToken
            StringKeyword
            SemicolonToken
          PropertySignature
            Identifier - line
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier line
            ColonToken
            NumberKeyword
            SemicolonToken
          PropertySignature
            Identifier - endl
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier endl
            ColonToken
            NumberKeyword
            SemicolonToken
          PropertySignature
            Identifier - pos
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier pos
            ColonToken
            NumberKeyword
            SemicolonToken
          PropertySignature
            Identifier - end
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier end
            ColonToken
            NumberKeyword
            SemicolonToken
          PropertySignature
            Identifier - text
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier text
            ColonToken
            StringKeyword
            SemicolonToken
          PropertySignature
            Identifier - tsNode
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier tsNode
            ColonToken
            TypeReference
              QualifiedName
                Identifier - ts
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/TypeReference/QualifiedName/Identifier ts
                DotToken
                Identifier - Node
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/TypeReference/QualifiedName/Identifier Node
            SemicolonToken
          PropertySignature
            Identifier - hasNodes
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier hasNodes
            ColonToken
            BooleanKeyword
            SemicolonToken
        CloseBraceToken
      SemicolonToken
    VariableStatement
      VariableDeclarationList
        ConstKeyword
        SyntaxList
          VariableDeclaration
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration indent = (level: number) => new Array(level).fill('  ').join('')
            Identifier - indent
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier indent
            EqualsToken
            ArrowFunction
              OpenParenToken
              SyntaxList
                Parameter
                  Identifier - level
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/SyntaxList/Parameter/Identifier level
                  ColonToken
                  NumberKeyword
              CloseParenToken
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/CloseParenToken )
              EqualsGreaterThanToken
              CallExpression
                PropertyAccessExpression
                  CallExpression
                    PropertyAccessExpression
                      NewExpression
                        NewKeyword
                        Identifier - Array
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/NewExpression/Identifier Array
                        OpenParenToken
                        SyntaxList
                          Identifier - level
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/NewExpression/SyntaxList/Identifier level
                        CloseParenToken
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/NewExpression/CloseParenToken )
                      DotToken
                      Identifier - fill
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/Identifier fill
                    OpenParenToken
                    SyntaxList
                      StringLiteral
                    CloseParenToken
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/CallExpression/PropertyAccessExpression/CallExpression/CloseParenToken )
                  DotToken
                  Identifier - join
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/CallExpression/PropertyAccessExpression/Identifier join
                OpenParenToken
                SyntaxList
                  StringLiteral
                CloseParenToken
SourceFile/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/CallExpression/CloseParenToken )
      SemicolonToken
    FunctionDeclaration
SourceFile/SyntaxList/FunctionDeclaration export function scanAllChildren(
  result: AstInfo[],
  node: ts.Node,
  pos: number,
  depth = 0
) {
  const startLine = ts.getLineAndCharacterOfPosition(
    node.getSourceFile(),
    node.pos
  );
  if (node.pos !== pos && node.getLeadingTriviaWidth() > 0) {
    const trivias = ts.getLeadingCommentRanges(node.getFullText(), 0);
    trivias?.forEach((trivia) => {
      const text = node.getFullText().substring(trivia.pos, trivia.end);
      const commentStartLine = ts.getLineAndCharacterOfPosition(
        node.getSourceFile(),
        node.pos + trivia.pos
      );
      const commentEndLine = ts.getLineAndCharacterOfPosition(
        node.getSourceFile(),
        node.pos + trivia.pos + text.length
      );
      result.push({
        element: true,
        level: depth,
        kind: ts.Debug.formatSyntaxKind(trivia.kind),
        line: commentStartLine.line,
        endl: commentEndLine.line,
        pos: trivia.pos + node.pos,
        end: trivia.end + node.pos,
        tsNode: node,
        text,
        hasNodes: false,
        // node,
      });
    });
  }
  const text = node.getText();
  const nextStartLine = ts.getLineAndCharacterOfPosition(
    node.getSourceFile(),
    node.pos + node.getLeadingTriviaWidth()
  );
  const nextEndLine = ts.getLineAndCharacterOfPosition(
    node.getSourceFile(),
    node.pos + node.getLeadingTriviaWidth() + text.length
  );
  const kind = ts.Debug.formatSyntaxKind(node.kind);
  const childrend = node.getChildren();
  result.push({
    element: childrend.length == 0,
    level: depth,
    kind,
    line: nextStartLine.line,
    endl: nextEndLine.line,
    pos: node.pos + node.getLeadingTriviaWidth(),
    end: node.end,
    tsNode: node,
    text,
    hasNodes: childrend.length > 0,
    // node,
  });
  if (kind === 'JSDocComment') return;
  depth++;
  childrend.forEach((c) => scanAllChildren(result, c, node.pos, depth));
}
      SyntaxList
        ExportKeyword
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/ExportKeyword export
      FunctionKeyword
      Identifier - scanAllChildren
SourceFile/SyntaxList/FunctionDeclaration/Identifier scanAllChildren
      OpenParenToken
      SyntaxList
        Parameter
          Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/Identifier result
          ColonToken
          ArrayType
            TypeReference
              Identifier - AstInfo
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/ArrayType/TypeReference/Identifier AstInfo
            OpenBracketToken
            CloseBracketToken
        CommaToken
        Parameter
          Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/Identifier node
          ColonToken
          TypeReference
            QualifiedName
              Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/TypeReference/QualifiedName/Identifier ts
              DotToken
              Identifier - Node
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/TypeReference/QualifiedName/Identifier Node
        CommaToken
        Parameter
          Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/Identifier pos
          ColonToken
          NumberKeyword
        CommaToken
        Parameter
          Identifier - depth
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/Identifier depth
          EqualsToken
          NumericLiteral
      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/CloseParenToken )
      Block
        OpenBraceToken
        SyntaxList
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration startLine = ts.getLineAndCharacterOfPosition(
    node.getSourceFile(),
    node.pos
  )
                  Identifier - startLine
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier startLine
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier ts
                      DotToken
                      Identifier - getLineAndCharacterOfPosition
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier getLineAndCharacterOfPosition
                    OpenParenToken
                    SyntaxList
                      CallExpression
                        PropertyAccessExpression
                          Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier node
                          DotToken
                          Identifier - getSourceFile
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier getSourceFile
                        OpenParenToken
                        SyntaxList
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/CloseParenToken )
                      CommaToken
                      PropertyAccessExpression
                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                        DotToken
                        Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/Identifier pos
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
            SemicolonToken
          IfStatement
            IfKeyword
            OpenParenToken
            BinaryExpression
              BinaryExpression
                PropertyAccessExpression
                  Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier node
                  DotToken
                  Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier pos
                ExclamationEqualsEqualsToken
                Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/Identifier pos
              AmpersandAmpersandToken
              BinaryExpression
                CallExpression
                  PropertyAccessExpression
                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier node
                    DotToken
                    Identifier - getLeadingTriviaWidth
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier getLeadingTriviaWidth
                  OpenParenToken
                  SyntaxList
                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/CloseParenToken )
                GreaterThanToken
                NumericLiteral
            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/CloseParenToken )
            Block
              OpenBraceToken
              SyntaxList
                VariableStatement
                  VariableDeclarationList
                    ConstKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration trivias = ts.getLeadingCommentRanges(node.getFullText(), 0)
                        Identifier - trivias
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier trivias
                        EqualsToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier ts
                            DotToken
                            Identifier - getLeadingCommentRanges
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier getLeadingCommentRanges
                          OpenParenToken
                          SyntaxList
                            CallExpression
                              PropertyAccessExpression
                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier node
                                DotToken
                                Identifier - getFullText
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier getFullText
                              OpenParenToken
                              SyntaxList
                              CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/CloseParenToken )
                            CommaToken
                            NumericLiteral
                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                  SemicolonToken
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier - trivias
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier trivias
                      QuestionDotToken
                      Identifier - forEach
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier forEach
                    OpenParenToken
                    SyntaxList
                      ArrowFunction
                        OpenParenToken
                        SyntaxList
                          Parameter
                            Identifier - trivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/SyntaxList/Parameter/Identifier trivia
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CloseParenToken )
                        EqualsGreaterThanToken
                        Block
                          OpenBraceToken
                          SyntaxList
                            VariableStatement
                              VariableDeclarationList
                                ConstKeyword
                                SyntaxList
                                  VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration text = node.getFullText().substring(trivia.pos, trivia.end)
                                    Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier text
                                    EqualsToken
                                    CallExpression
                                      PropertyAccessExpression
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/Identifier node
                                            DotToken
                                            Identifier - getFullText
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/Identifier getFullText
                                          OpenParenToken
                                          SyntaxList
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/CloseParenToken )
                                        DotToken
                                        Identifier - substring
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier substring
                                      OpenParenToken
                                      SyntaxList
                                        PropertyAccessExpression
                                          Identifier - trivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/Identifier trivia
                                          DotToken
                                          Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/Identifier pos
                                        CommaToken
                                        PropertyAccessExpression
                                          Identifier - trivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/Identifier trivia
                                          DotToken
                                          Identifier - end
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/Identifier end
                                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                              SemicolonToken
                            VariableStatement
                              VariableDeclarationList
                                ConstKeyword
                                SyntaxList
                                  VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration commentStartLine = ts.getLineAndCharacterOfPosition(
        node.getSourceFile(),
        node.pos + trivia.pos
      )
                                    Identifier - commentStartLine
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier commentStartLine
                                    EqualsToken
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier ts
                                        DotToken
                                        Identifier - getLineAndCharacterOfPosition
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier getLineAndCharacterOfPosition
                                      OpenParenToken
                                      SyntaxList
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier node
                                            DotToken
                                            Identifier - getSourceFile
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier getSourceFile
                                          OpenParenToken
                                          SyntaxList
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/CloseParenToken )
                                        CommaToken
                                        BinaryExpression
                                          PropertyAccessExpression
                                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/PropertyAccessExpression/Identifier node
                                            DotToken
                                            Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/PropertyAccessExpression/Identifier pos
                                          PlusToken
                                          PropertyAccessExpression
                                            Identifier - trivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/PropertyAccessExpression/Identifier trivia
                                            DotToken
                                            Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/PropertyAccessExpression/Identifier pos
                                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                              SemicolonToken
                            VariableStatement
                              VariableDeclarationList
                                ConstKeyword
                                SyntaxList
                                  VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration commentEndLine = ts.getLineAndCharacterOfPosition(
        node.getSourceFile(),
        node.pos + trivia.pos + text.length
      )
                                    Identifier - commentEndLine
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier commentEndLine
                                    EqualsToken
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier ts
                                        DotToken
                                        Identifier - getLineAndCharacterOfPosition
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier getLineAndCharacterOfPosition
                                      OpenParenToken
                                      SyntaxList
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier node
                                            DotToken
                                            Identifier - getSourceFile
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier getSourceFile
                                          OpenParenToken
                                          SyntaxList
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/CloseParenToken )
                                        CommaToken
                                        BinaryExpression
                                          BinaryExpression
                                            PropertyAccessExpression
                                              Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier node
                                              DotToken
                                              Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier pos
                                            PlusToken
                                            PropertyAccessExpression
                                              Identifier - trivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier trivia
                                              DotToken
                                              Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier pos
                                          PlusToken
                                          PropertyAccessExpression
                                            Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/PropertyAccessExpression/Identifier text
                                            DotToken
                                            Identifier - length
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/PropertyAccessExpression/Identifier length
                                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                              SemicolonToken
                            ExpressionStatement
                              CallExpression
                                PropertyAccessExpression
                                  Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                                  DotToken
                                  Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                                OpenParenToken
                                SyntaxList
                                  ObjectLiteralExpression
                                    OpenBraceToken
                                    SyntaxList
                                      PropertyAssignment
                                        Identifier - element
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier element
                                        ColonToken
                                        TrueKeyword
                                      CommaToken
                                      PropertyAssignment
                                        Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier level
                                        ColonToken
                                        Identifier - depth
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier depth
                                      CommaToken
                                      PropertyAssignment
                                        Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier kind
                                        ColonToken
                                        CallExpression
                                          PropertyAccessExpression
                                            PropertyAccessExpression
                                              Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier ts
                                              DotToken
                                              Identifier - Debug
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier Debug
                                            DotToken
                                            Identifier - formatSyntaxKind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/CallExpression/PropertyAccessExpression/Identifier formatSyntaxKind
                                          OpenParenToken
                                          SyntaxList
                                            PropertyAccessExpression
                                              Identifier - trivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/CallExpression/SyntaxList/PropertyAccessExpression/Identifier trivia
                                              DotToken
                                              Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/CallExpression/SyntaxList/PropertyAccessExpression/Identifier kind
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/CallExpression/CloseParenToken )
                                      CommaToken
                                      PropertyAssignment
                                        Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier line
                                        ColonToken
                                        PropertyAccessExpression
                                          Identifier - commentStartLine
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier commentStartLine
                                          DotToken
                                          Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier line
                                      CommaToken
                                      PropertyAssignment
                                        Identifier - endl
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier endl
                                        ColonToken
                                        PropertyAccessExpression
                                          Identifier - commentEndLine
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier commentEndLine
                                          DotToken
                                          Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier line
                                      CommaToken
                                      PropertyAssignment
                                        Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier pos
                                        ColonToken
                                        BinaryExpression
                                          PropertyAccessExpression
                                            Identifier - trivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier trivia
                                            DotToken
                                            Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier pos
                                          PlusToken
                                          PropertyAccessExpression
                                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier node
                                            DotToken
                                            Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier pos
                                      CommaToken
                                      PropertyAssignment
                                        Identifier - end
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier end
                                        ColonToken
                                        BinaryExpression
                                          PropertyAccessExpression
                                            Identifier - trivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier trivia
                                            DotToken
                                            Identifier - end
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier end
                                          PlusToken
                                          PropertyAccessExpression
                                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier node
                                            DotToken
                                            Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier pos
                                      CommaToken
                                      PropertyAssignment
                                        Identifier - tsNode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier tsNode
                                        ColonToken
                                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier node
                                      CommaToken
                                      ShorthandPropertyAssignment
                                        Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/ShorthandPropertyAssignment/Identifier text
                                      CommaToken
                                      PropertyAssignment
                                        Identifier - hasNodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier hasNodes
                                        ColonToken
                                        FalseKeyword
                                      CommaToken
                                    SingleLineCommentTrivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SingleLineCommentTrivia // node,
                                    CloseBraceToken
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                              SemicolonToken
                          CloseBraceToken
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                  SemicolonToken
              CloseBraceToken
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration text = node.getText()
                  Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier text
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier node
                      DotToken
                      Identifier - getText
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier getText
                    OpenParenToken
                    SyntaxList
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
            SemicolonToken
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration nextStartLine = ts.getLineAndCharacterOfPosition(
    node.getSourceFile(),
    node.pos + node.getLeadingTriviaWidth()
  )
                  Identifier - nextStartLine
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier nextStartLine
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier ts
                      DotToken
                      Identifier - getLineAndCharacterOfPosition
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier getLineAndCharacterOfPosition
                    OpenParenToken
                    SyntaxList
                      CallExpression
                        PropertyAccessExpression
                          Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier node
                          DotToken
                          Identifier - getSourceFile
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier getSourceFile
                        OpenParenToken
                        SyntaxList
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/CloseParenToken )
                      CommaToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/PropertyAccessExpression/Identifier node
                          DotToken
                          Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/PropertyAccessExpression/Identifier pos
                        PlusToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier node
                            DotToken
                            Identifier - getLeadingTriviaWidth
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier getLeadingTriviaWidth
                          OpenParenToken
                          SyntaxList
                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/CallExpression/CloseParenToken )
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
            SemicolonToken
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration nextEndLine = ts.getLineAndCharacterOfPosition(
    node.getSourceFile(),
    node.pos + node.getLeadingTriviaWidth() + text.length
  )
                  Identifier - nextEndLine
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier nextEndLine
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier ts
                      DotToken
                      Identifier - getLineAndCharacterOfPosition
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier getLineAndCharacterOfPosition
                    OpenParenToken
                    SyntaxList
                      CallExpression
                        PropertyAccessExpression
                          Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier node
                          DotToken
                          Identifier - getSourceFile
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier getSourceFile
                        OpenParenToken
                        SyntaxList
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/CallExpression/CloseParenToken )
                      CommaToken
                      BinaryExpression
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier node
                            DotToken
                            Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier pos
                          PlusToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier node
                              DotToken
                              Identifier - getLeadingTriviaWidth
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier getLeadingTriviaWidth
                            OpenParenToken
                            SyntaxList
                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/BinaryExpression/CallExpression/CloseParenToken )
                        PlusToken
                        PropertyAccessExpression
                          Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/PropertyAccessExpression/Identifier text
                          DotToken
                          Identifier - length
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/BinaryExpression/PropertyAccessExpression/Identifier length
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
            SemicolonToken
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration kind = ts.Debug.formatSyntaxKind(node.kind)
                  Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier kind
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      PropertyAccessExpression
                        Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier ts
                        DotToken
                        Identifier - Debug
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier Debug
                      DotToken
                      Identifier - formatSyntaxKind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier formatSyntaxKind
                    OpenParenToken
                    SyntaxList
                      PropertyAccessExpression
                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                        DotToken
                        Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/Identifier kind
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
            SemicolonToken
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration childrend = node.getChildren()
                  Identifier - childrend
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier childrend
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier node
                      DotToken
                      Identifier - getChildren
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier getChildren
                    OpenParenToken
                    SyntaxList
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
            SemicolonToken
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                DotToken
                Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
              OpenParenToken
              SyntaxList
                ObjectLiteralExpression
                  OpenBraceToken
                  SyntaxList
                    PropertyAssignment
                      Identifier - element
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier element
                      ColonToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier - childrend
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier childrend
                          DotToken
                          Identifier - length
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier length
                        EqualsEqualsToken
                        NumericLiteral
                    CommaToken
                    PropertyAssignment
                      Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier level
                      ColonToken
                      Identifier - depth
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier depth
                    CommaToken
                    ShorthandPropertyAssignment
                      Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/ShorthandPropertyAssignment/Identifier kind
                    CommaToken
                    PropertyAssignment
                      Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier line
                      ColonToken
                      PropertyAccessExpression
                        Identifier - nextStartLine
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier nextStartLine
                        DotToken
                        Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier line
                    CommaToken
                    PropertyAssignment
                      Identifier - endl
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier endl
                      ColonToken
                      PropertyAccessExpression
                        Identifier - nextEndLine
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier nextEndLine
                        DotToken
                        Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier line
                    CommaToken
                    PropertyAssignment
                      Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier pos
                      ColonToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier node
                          DotToken
                          Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier pos
                        PlusToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier node
                            DotToken
                            Identifier - getLeadingTriviaWidth
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier getLeadingTriviaWidth
                          OpenParenToken
                          SyntaxList
                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/CallExpression/CloseParenToken )
                    CommaToken
                    PropertyAssignment
                      Identifier - end
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier end
                      ColonToken
                      PropertyAccessExpression
                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                        DotToken
                        Identifier - end
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier end
                    CommaToken
                    PropertyAssignment
                      Identifier - tsNode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier tsNode
                      ColonToken
                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier node
                    CommaToken
                    ShorthandPropertyAssignment
                      Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/ShorthandPropertyAssignment/Identifier text
                    CommaToken
                    PropertyAssignment
                      Identifier - hasNodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier hasNodes
                      ColonToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier - childrend
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier childrend
                          DotToken
                          Identifier - length
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/BinaryExpression/PropertyAccessExpression/Identifier length
                        GreaterThanToken
                        NumericLiteral
                    CommaToken
                  SingleLineCommentTrivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SingleLineCommentTrivia // node,
                  CloseBraceToken
              CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
            SemicolonToken
          IfStatement
            IfKeyword
            OpenParenToken
            BinaryExpression
              Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/Identifier kind
              EqualsEqualsEqualsToken
              StringLiteral
            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/CloseParenToken )
            ReturnStatement
              ReturnKeyword
              SemicolonToken
          ExpressionStatement
            PostfixUnaryExpression
              Identifier - depth
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/PostfixUnaryExpression/Identifier depth
              PlusPlusToken
            SemicolonToken
          ExpressionStatement
            CallExpression
              PropertyAccessExpression
                Identifier - childrend
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier childrend
                DotToken
                Identifier - forEach
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier forEach
              OpenParenToken
              SyntaxList
                ArrowFunction
                  OpenParenToken
                  SyntaxList
                    Parameter
                      Identifier - c
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/SyntaxList/Parameter/Identifier c
                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CloseParenToken )
                  EqualsGreaterThanToken
                  CallExpression
                    Identifier - scanAllChildren
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/Identifier scanAllChildren
                    OpenParenToken
                    SyntaxList
                      Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/Identifier result
                      CommaToken
                      Identifier - c
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/Identifier c
                      CommaToken
                      PropertyAccessExpression
                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                        DotToken
                        Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/PropertyAccessExpression/Identifier pos
                      CommaToken
                      Identifier - depth
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/Identifier depth
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/CloseParenToken )
              CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
            SemicolonToken
        CloseBraceToken
    ClassDeclaration
SourceFile/SyntaxList/ClassDeclaration class TreeParser {
  constructor(private nodes: AstInfo[]) {
    //
  }

  nextFunction = (i: number) => {
    const nodes = this.nodes;
    const node = nodes[i];
    for (let j = i + 1; j < nodes.length; j++) {
      const tnode = nodes[j];
      if (tnode.level <= node.level) {
        return j;
      }
    }
    return nodes.length;
  };

  prevFind = (i: number, kind: string) => {
    const nodes = this.nodes;
    const node = nodes[i];
    for (let j = i - 1; j >= 0; j--) {
      const tnode = nodes[j];
      if (tnode.level < node.level) return -1;
      if (tnode.kind.indexOf(kind) === 0) return j;
    }
    return 0;
  };

  nextFind = (i: number, kind: string | string[]) => {
    const nodes = this.nodes;
    const findCore = (i: number, kind: string) => {
      const node = nodes[i];
      for (let j = i + 1; j < nodes.length; j++) {
        const tnode = nodes[j];
        if (tnode.level < node.level) return -1;
        if (nodes[j].kind.indexOf(kind) === 0) return j;
      }
      return -1;
    };
    if (Array.isArray(kind)) {
      for (let j = 0; j < kind.length; j++) {
        i = findCore(i, kind[j]);
        if (i < 0) return -1;
      }
      return i;
    }
    return findCore(i, kind);
  };
}
      ClassKeyword
      Identifier - TreeParser
SourceFile/SyntaxList/ClassDeclaration/Identifier TreeParser
      OpenBraceToken
      SyntaxList
        Constructor
          ConstructorKeyword
          OpenParenToken
          SyntaxList
            Parameter
              SyntaxList
                PrivateKeyword
              Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/Constructor/SyntaxList/Parameter/Identifier nodes
              ColonToken
              ArrayType
                TypeReference
                  Identifier - AstInfo
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/Constructor/SyntaxList/Parameter/ArrayType/TypeReference/Identifier AstInfo
                OpenBracketToken
                CloseBracketToken
          CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/Constructor/CloseParenToken )
          Block
            OpenBraceToken
            SyntaxList
            SingleLineCommentTrivia
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/Constructor/Block/SingleLineCommentTrivia //
            CloseBraceToken
        PropertyDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration nextFunction = (i: number) => {
    const nodes = this.nodes;
    const node = nodes[i];
    for (let j = i + 1; j < nodes.length; j++) {
      const tnode = nodes[j];
      if (tnode.level <= node.level) {
        return j;
      }
    }
    return nodes.length;
  };
          Identifier - nextFunction
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/Identifier nextFunction
          EqualsToken
          ArrowFunction
            OpenParenToken
            SyntaxList
              Parameter
                Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/SyntaxList/Parameter/Identifier i
                ColonToken
                NumberKeyword
            CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/CloseParenToken )
            EqualsGreaterThanToken
            Block
              OpenBraceToken
              SyntaxList
                VariableStatement
                  VariableDeclarationList
                    ConstKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration nodes = this.nodes
                        Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier nodes
                        EqualsToken
                        PropertyAccessExpression
                          ThisKeyword
                          DotToken
                          Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/PropertyAccessExpression/Identifier nodes
                  SemicolonToken
                VariableStatement
                  VariableDeclarationList
                    ConstKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration node = nodes[i]
                        Identifier - node
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier node
                        EqualsToken
                        ElementAccessExpression
                          Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier nodes
                          OpenBracketToken
                          Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier i
                          CloseBracketToken
                  SemicolonToken
                ForStatement
                  ForKeyword
                  OpenParenToken
                  VariableDeclarationList
                    LetKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration j = i + 1
                        Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier j
                        EqualsToken
                        BinaryExpression
                          Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/BinaryExpression/Identifier i
                          PlusToken
                          NumericLiteral
                  SemicolonToken
                  BinaryExpression
                    Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/BinaryExpression/Identifier j
                    LessThanToken
                    PropertyAccessExpression
                      Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/BinaryExpression/PropertyAccessExpression/Identifier nodes
                      DotToken
                      Identifier - length
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/BinaryExpression/PropertyAccessExpression/Identifier length
                  SemicolonToken
                  PostfixUnaryExpression
                    Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/PostfixUnaryExpression/Identifier j
                    PlusPlusToken
                  CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/CloseParenToken )
                  Block
                    OpenBraceToken
                    SyntaxList
                      VariableStatement
                        VariableDeclarationList
                          ConstKeyword
                          SyntaxList
                            VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration tnode = nodes[j]
                              Identifier - tnode
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier tnode
                              EqualsToken
                              ElementAccessExpression
                                Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier nodes
                                OpenBracketToken
                                Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier j
                                CloseBracketToken
                        SemicolonToken
                      IfStatement
                        IfKeyword
                        OpenParenToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier - tnode
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier tnode
                            DotToken
                            Identifier - level
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier level
                          LessThanEqualsToken
                          PropertyAccessExpression
                            Identifier - node
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                            DotToken
                            Identifier - level
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier level
                        CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                        Block
                          OpenBraceToken
                          SyntaxList
                            ReturnStatement
                              ReturnKeyword
                              Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ReturnStatement/Identifier j
                              SemicolonToken
                          CloseBraceToken
                    CloseBraceToken
                ReturnStatement
                  ReturnKeyword
                  PropertyAccessExpression
                    Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ReturnStatement/PropertyAccessExpression/Identifier nodes
                    DotToken
                    Identifier - length
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ReturnStatement/PropertyAccessExpression/Identifier length
                  SemicolonToken
              CloseBraceToken
          SemicolonToken
        PropertyDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration prevFind = (i: number, kind: string) => {
    const nodes = this.nodes;
    const node = nodes[i];
    for (let j = i - 1; j >= 0; j--) {
      const tnode = nodes[j];
      if (tnode.level < node.level) return -1;
      if (tnode.kind.indexOf(kind) === 0) return j;
    }
    return 0;
  };
          Identifier - prevFind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/Identifier prevFind
          EqualsToken
          ArrowFunction
            OpenParenToken
            SyntaxList
              Parameter
                Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/SyntaxList/Parameter/Identifier i
                ColonToken
                NumberKeyword
              CommaToken
              Parameter
                Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/SyntaxList/Parameter/Identifier kind
                ColonToken
                StringKeyword
            CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/CloseParenToken )
            EqualsGreaterThanToken
            Block
              OpenBraceToken
              SyntaxList
                VariableStatement
                  VariableDeclarationList
                    ConstKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration nodes = this.nodes
                        Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier nodes
                        EqualsToken
                        PropertyAccessExpression
                          ThisKeyword
                          DotToken
                          Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/PropertyAccessExpression/Identifier nodes
                  SemicolonToken
                VariableStatement
                  VariableDeclarationList
                    ConstKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration node = nodes[i]
                        Identifier - node
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier node
                        EqualsToken
                        ElementAccessExpression
                          Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier nodes
                          OpenBracketToken
                          Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier i
                          CloseBracketToken
                  SemicolonToken
                ForStatement
                  ForKeyword
                  OpenParenToken
                  VariableDeclarationList
                    LetKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration j = i - 1
                        Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier j
                        EqualsToken
                        BinaryExpression
                          Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/BinaryExpression/Identifier i
                          MinusToken
                          NumericLiteral
                  SemicolonToken
                  BinaryExpression
                    Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/BinaryExpression/Identifier j
                    GreaterThanEqualsToken
                    NumericLiteral
                  SemicolonToken
                  PostfixUnaryExpression
                    Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/PostfixUnaryExpression/Identifier j
                    MinusMinusToken
                  CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/CloseParenToken )
                  Block
                    OpenBraceToken
                    SyntaxList
                      VariableStatement
                        VariableDeclarationList
                          ConstKeyword
                          SyntaxList
                            VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration tnode = nodes[j]
                              Identifier - tnode
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier tnode
                              EqualsToken
                              ElementAccessExpression
                                Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier nodes
                                OpenBracketToken
                                Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier j
                                CloseBracketToken
                        SemicolonToken
                      IfStatement
                        IfKeyword
                        OpenParenToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier - tnode
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier tnode
                            DotToken
                            Identifier - level
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier level
                          LessThanToken
                          PropertyAccessExpression
                            Identifier - node
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                            DotToken
                            Identifier - level
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier level
                        CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                        ReturnStatement
                          ReturnKeyword
                          PrefixUnaryExpression
                            MinusToken
                            NumericLiteral
                          SemicolonToken
                      IfStatement
                        IfKeyword
                        OpenParenToken
                        BinaryExpression
                          CallExpression
                            PropertyAccessExpression
                              PropertyAccessExpression
                                Identifier - tnode
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier tnode
                                DotToken
                                Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier kind
                              DotToken
                              Identifier - indexOf
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier indexOf
                            OpenParenToken
                            SyntaxList
                              Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/SyntaxList/Identifier kind
                            CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/CloseParenToken )
                          EqualsEqualsEqualsToken
                          NumericLiteral
                        CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                        ReturnStatement
                          ReturnKeyword
                          Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/ReturnStatement/Identifier j
                          SemicolonToken
                    CloseBraceToken
                ReturnStatement
                  ReturnKeyword
                  NumericLiteral
                  SemicolonToken
              CloseBraceToken
          SemicolonToken
        PropertyDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration nextFind = (i: number, kind: string | string[]) => {
    const nodes = this.nodes;
    const findCore = (i: number, kind: string) => {
      const node = nodes[i];
      for (let j = i + 1; j < nodes.length; j++) {
        const tnode = nodes[j];
        if (tnode.level < node.level) return -1;
        if (nodes[j].kind.indexOf(kind) === 0) return j;
      }
      return -1;
    };
    if (Array.isArray(kind)) {
      for (let j = 0; j < kind.length; j++) {
        i = findCore(i, kind[j]);
        if (i < 0) return -1;
      }
      return i;
    }
    return findCore(i, kind);
  };
          Identifier - nextFind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/Identifier nextFind
          EqualsToken
          ArrowFunction
            OpenParenToken
            SyntaxList
              Parameter
                Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/SyntaxList/Parameter/Identifier i
                ColonToken
                NumberKeyword
              CommaToken
              Parameter
                Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/SyntaxList/Parameter/Identifier kind
                ColonToken
                UnionType
                  SyntaxList
                    StringKeyword
                    BarToken
                    ArrayType
                      StringKeyword
                      OpenBracketToken
                      CloseBracketToken
            CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/CloseParenToken )
            EqualsGreaterThanToken
            Block
              OpenBraceToken
              SyntaxList
                VariableStatement
                  VariableDeclarationList
                    ConstKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration nodes = this.nodes
                        Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier nodes
                        EqualsToken
                        PropertyAccessExpression
                          ThisKeyword
                          DotToken
                          Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/PropertyAccessExpression/Identifier nodes
                  SemicolonToken
                VariableStatement
                  VariableDeclarationList
                    ConstKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration findCore = (i: number, kind: string) => {
      const node = nodes[i];
      for (let j = i + 1; j < nodes.length; j++) {
        const tnode = nodes[j];
        if (tnode.level < node.level) return -1;
        if (nodes[j].kind.indexOf(kind) === 0) return j;
      }
      return -1;
    }
                        Identifier - findCore
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier findCore
                        EqualsToken
                        ArrowFunction
                          OpenParenToken
                          SyntaxList
                            Parameter
                              Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/SyntaxList/Parameter/Identifier i
                              ColonToken
                              NumberKeyword
                            CommaToken
                            Parameter
                              Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/SyntaxList/Parameter/Identifier kind
                              ColonToken
                              StringKeyword
                          CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/CloseParenToken )
                          EqualsGreaterThanToken
                          Block
                            OpenBraceToken
                            SyntaxList
                              VariableStatement
                                VariableDeclarationList
                                  ConstKeyword
                                  SyntaxList
                                    VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration node = nodes[i]
                                      Identifier - node
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier node
                                      EqualsToken
                                      ElementAccessExpression
                                        Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier nodes
                                        OpenBracketToken
                                        Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier i
                                        CloseBracketToken
                                SemicolonToken
                              ForStatement
                                ForKeyword
                                OpenParenToken
                                VariableDeclarationList
                                  LetKeyword
                                  SyntaxList
                                    VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration j = i + 1
                                      Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier j
                                      EqualsToken
                                      BinaryExpression
                                        Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/BinaryExpression/Identifier i
                                        PlusToken
                                        NumericLiteral
                                SemicolonToken
                                BinaryExpression
                                  Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/BinaryExpression/Identifier j
                                  LessThanToken
                                  PropertyAccessExpression
                                    Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/BinaryExpression/PropertyAccessExpression/Identifier nodes
                                    DotToken
                                    Identifier - length
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/BinaryExpression/PropertyAccessExpression/Identifier length
                                SemicolonToken
                                PostfixUnaryExpression
                                  Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/PostfixUnaryExpression/Identifier j
                                  PlusPlusToken
                                CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/CloseParenToken )
                                Block
                                  OpenBraceToken
                                  SyntaxList
                                    VariableStatement
                                      VariableDeclarationList
                                        ConstKeyword
                                        SyntaxList
                                          VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration tnode = nodes[j]
                                            Identifier - tnode
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier tnode
                                            EqualsToken
                                            ElementAccessExpression
                                              Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier nodes
                                              OpenBracketToken
                                              Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier j
                                              CloseBracketToken
                                      SemicolonToken
                                    IfStatement
                                      IfKeyword
                                      OpenParenToken
                                      BinaryExpression
                                        PropertyAccessExpression
                                          Identifier - tnode
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier tnode
                                          DotToken
                                          Identifier - level
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier level
                                        LessThanToken
                                        PropertyAccessExpression
                                          Identifier - node
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                          DotToken
                                          Identifier - level
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier level
                                      CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                                      ReturnStatement
                                        ReturnKeyword
                                        PrefixUnaryExpression
                                          MinusToken
                                          NumericLiteral
                                        SemicolonToken
                                    IfStatement
                                      IfKeyword
                                      OpenParenToken
                                      BinaryExpression
                                        CallExpression
                                          PropertyAccessExpression
                                            PropertyAccessExpression
                                              ElementAccessExpression
                                                Identifier - nodes
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/PropertyAccessExpression/PropertyAccessExpression/ElementAccessExpression/Identifier nodes
                                                OpenBracketToken
                                                Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/PropertyAccessExpression/PropertyAccessExpression/ElementAccessExpression/Identifier j
                                                CloseBracketToken
                                              DotToken
                                              Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier kind
                                            DotToken
                                            Identifier - indexOf
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier indexOf
                                          OpenParenToken
                                          SyntaxList
                                            Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/SyntaxList/Identifier kind
                                          CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/CloseParenToken )
                                        EqualsEqualsEqualsToken
                                        NumericLiteral
                                      CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                                      ReturnStatement
                                        ReturnKeyword
                                        Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrowFunction/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/ReturnStatement/Identifier j
                                        SemicolonToken
                                  CloseBraceToken
                              ReturnStatement
                                ReturnKeyword
                                PrefixUnaryExpression
                                  MinusToken
                                  NumericLiteral
                                SemicolonToken
                            CloseBraceToken
                  SemicolonToken
                IfStatement
                  IfKeyword
                  OpenParenToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier - Array
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/CallExpression/PropertyAccessExpression/Identifier Array
                      DotToken
                      Identifier - isArray
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/CallExpression/PropertyAccessExpression/Identifier isArray
                    OpenParenToken
                    SyntaxList
                      Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/CallExpression/SyntaxList/Identifier kind
                    CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/CallExpression/CloseParenToken )
                  CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/CloseParenToken )
                  Block
                    OpenBraceToken
                    SyntaxList
                      ForStatement
                        ForKeyword
                        OpenParenToken
                        VariableDeclarationList
                          LetKeyword
                          SyntaxList
                            VariableDeclaration
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration j = 0
                              Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier j
                              EqualsToken
                              NumericLiteral
                        SemicolonToken
                        BinaryExpression
                          Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/Identifier j
                          LessThanToken
                          PropertyAccessExpression
                            Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/PropertyAccessExpression/Identifier kind
                            DotToken
                            Identifier - length
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/PropertyAccessExpression/Identifier length
                        SemicolonToken
                        PostfixUnaryExpression
                          Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/PostfixUnaryExpression/Identifier j
                          PlusPlusToken
                        CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/CloseParenToken )
                        Block
                          OpenBraceToken
                          SyntaxList
                            ExpressionStatement
                              BinaryExpression
                                Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/Identifier i
                                EqualsToken
                                CallExpression
                                  Identifier - findCore
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/Identifier findCore
                                  OpenParenToken
                                  SyntaxList
                                    Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/SyntaxList/Identifier i
                                    CommaToken
                                    ElementAccessExpression
                                      Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/SyntaxList/ElementAccessExpression/Identifier kind
                                      OpenBracketToken
                                      Identifier - j
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/SyntaxList/ElementAccessExpression/Identifier j
                                      CloseBracketToken
                                  CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/CloseParenToken )
                              SemicolonToken
                            IfStatement
                              IfKeyword
                              OpenParenToken
                              BinaryExpression
                                Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/Identifier i
                                LessThanToken
                                NumericLiteral
                              CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                              ReturnStatement
                                ReturnKeyword
                                PrefixUnaryExpression
                                  MinusToken
                                  NumericLiteral
                                SemicolonToken
                          CloseBraceToken
                      ReturnStatement
                        ReturnKeyword
                        Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ReturnStatement/Identifier i
                        SemicolonToken
                    CloseBraceToken
                ReturnStatement
                  ReturnKeyword
                  CallExpression
                    Identifier - findCore
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ReturnStatement/CallExpression/Identifier findCore
                    OpenParenToken
                    SyntaxList
                      Identifier - i
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/Identifier i
                      CommaToken
                      Identifier - kind
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/Identifier kind
                    CloseParenToken
SourceFile/SyntaxList/ClassDeclaration/SyntaxList/PropertyDeclaration/ArrowFunction/Block/SyntaxList/ReturnStatement/CallExpression/CloseParenToken )
                  SemicolonToken
              CloseBraceToken
          SemicolonToken
      CloseBraceToken
    FunctionDeclaration
SourceFile/SyntaxList/FunctionDeclaration export function scanJsxFunctions(result: AstInfo[]) {
  const tree = new TreeParser(result);
  for (let i = 0; i < result.length; i++) {
    const node = result[i];
    if (node.kind === 'FunctionDeclaration') {
      const f = tree.nextFind(i, 'FunctionKeyword');
      const e = tree.nextFind(i, 'ExportKeyword');
      const t = tree.nextFind(i, 'Identifier');
      if (tree.nextFind(t, 'JsxElement') >= 0) {
        console.log(`${e >= 0 ? 'export ' : ''}${result[t].text}`);
      }
      i = tree.nextFunction(i);
    }
    if (node.kind === 'VariableStatement') {
      const a = tree.nextFind(i, 'ArrowFunction');
      if (a >= 0) {
        const e = tree.nextFind(i, ['SyntaxList', 'ExportKeyword']);
        const t = tree.prevFind(a, 'Identifier');
        if (t >= 0) {
          if (
            tree.nextFind(t, 'JsxElement') >= 0 ||
            tree.nextFind(t, 'JsxSelfClosingElement') >= 0
          ) {
            console.log(`${e >= 0 ? 'export ' : ''}${result[t].text}`);
          }
        }
        i = tree.nextFunction(a);
      }
    }
  }
}
      SyntaxList
        ExportKeyword
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/ExportKeyword export
      FunctionKeyword
      Identifier - scanJsxFunctions
SourceFile/SyntaxList/FunctionDeclaration/Identifier scanJsxFunctions
      OpenParenToken
      SyntaxList
        Parameter
          Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/Identifier result
          ColonToken
          ArrayType
            TypeReference
              Identifier - AstInfo
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/ArrayType/TypeReference/Identifier AstInfo
            OpenBracketToken
            CloseBracketToken
      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/CloseParenToken )
      Block
        OpenBraceToken
        SyntaxList
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration tree = new TreeParser(result)
                  Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier tree
                  EqualsToken
                  NewExpression
                    NewKeyword
                    Identifier - TreeParser
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/NewExpression/Identifier TreeParser
                    OpenParenToken
                    SyntaxList
                      Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/NewExpression/SyntaxList/Identifier result
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/NewExpression/CloseParenToken )
            SemicolonToken
          ForStatement
            ForKeyword
            OpenParenToken
            VariableDeclarationList
              LetKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration i = 0
                  Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier i
                  EqualsToken
                  NumericLiteral
            SemicolonToken
            BinaryExpression
              Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/BinaryExpression/Identifier i
              LessThanToken
              PropertyAccessExpression
                Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/BinaryExpression/PropertyAccessExpression/Identifier result
                DotToken
                Identifier - length
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/BinaryExpression/PropertyAccessExpression/Identifier length
            SemicolonToken
            PostfixUnaryExpression
              Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/PostfixUnaryExpression/Identifier i
              PlusPlusToken
            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/CloseParenToken )
            Block
              OpenBraceToken
              SyntaxList
                VariableStatement
                  VariableDeclarationList
                    ConstKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration node = result[i]
                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier node
                        EqualsToken
                        ElementAccessExpression
                          Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier result
                          OpenBracketToken
                          Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier i
                          CloseBracketToken
                  SemicolonToken
                IfStatement
                  IfKeyword
                  OpenParenToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                      DotToken
                      Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier kind
                    EqualsEqualsEqualsToken
                    StringLiteral
                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                  Block
                    OpenBraceToken
                    SyntaxList
                      VariableStatement
                        VariableDeclarationList
                          ConstKeyword
                          SyntaxList
                            VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration f = tree.nextFind(i, 'FunctionKeyword')
                              Identifier - f
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier f
                              EqualsToken
                              CallExpression
                                PropertyAccessExpression
                                  Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                  DotToken
                                  Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier nextFind
                                OpenParenToken
                                SyntaxList
                                  Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier i
                                  CommaToken
                                  StringLiteral
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                        SemicolonToken
                      VariableStatement
                        VariableDeclarationList
                          ConstKeyword
                          SyntaxList
                            VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration e = tree.nextFind(i, 'ExportKeyword')
                              Identifier - e
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier e
                              EqualsToken
                              CallExpression
                                PropertyAccessExpression
                                  Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                  DotToken
                                  Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier nextFind
                                OpenParenToken
                                SyntaxList
                                  Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier i
                                  CommaToken
                                  StringLiteral
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                        SemicolonToken
                      VariableStatement
                        VariableDeclarationList
                          ConstKeyword
                          SyntaxList
                            VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration t = tree.nextFind(i, 'Identifier')
                              Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier t
                              EqualsToken
                              CallExpression
                                PropertyAccessExpression
                                  Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                  DotToken
                                  Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier nextFind
                                OpenParenToken
                                SyntaxList
                                  Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier i
                                  CommaToken
                                  StringLiteral
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                        SemicolonToken
                      IfStatement
                        IfKeyword
                        OpenParenToken
                        BinaryExpression
                          CallExpression
                            PropertyAccessExpression
                              Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier tree
                              DotToken
                              Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier nextFind
                            OpenParenToken
                            SyntaxList
                              Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/SyntaxList/Identifier t
                              CommaToken
                              StringLiteral
                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/CallExpression/CloseParenToken )
                          GreaterThanEqualsToken
                          NumericLiteral
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                        Block
                          OpenBraceToken
                          SyntaxList
                            ExpressionStatement
                              CallExpression
                                PropertyAccessExpression
                                  Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                                  DotToken
                                  Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                                OpenParenToken
                                SyntaxList
                                  TemplateExpression
                                    TemplateHead
                                    SyntaxList
                                      TemplateSpan
                                        ConditionalExpression
                                          BinaryExpression
                                            Identifier - e
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/Identifier e
                                            GreaterThanEqualsToken
                                            NumericLiteral
                                          QuestionToken
                                          StringLiteral
                                          ColonToken
                                          StringLiteral
                                        TemplateMiddle
                                      TemplateSpan
                                        PropertyAccessExpression
                                          ElementAccessExpression
                                            Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/ElementAccessExpression/Identifier result
                                            OpenBracketToken
                                            Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/ElementAccessExpression/Identifier t
                                            CloseBracketToken
                                          DotToken
                                          Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier text
                                        TemplateTail
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                              SemicolonToken
                          CloseBraceToken
                      ExpressionStatement
                        BinaryExpression
                          Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/Identifier i
                          EqualsToken
                          CallExpression
                            PropertyAccessExpression
                              Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier tree
                              DotToken
                              Identifier - nextFunction
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier nextFunction
                            OpenParenToken
                            SyntaxList
                              Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/SyntaxList/Identifier i
                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/CloseParenToken )
                        SemicolonToken
                    CloseBraceToken
                IfStatement
                  IfKeyword
                  OpenParenToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                      DotToken
                      Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier kind
                    EqualsEqualsEqualsToken
                    StringLiteral
                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                  Block
                    OpenBraceToken
                    SyntaxList
                      VariableStatement
                        VariableDeclarationList
                          ConstKeyword
                          SyntaxList
                            VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration a = tree.nextFind(i, 'ArrowFunction')
                              Identifier - a
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier a
                              EqualsToken
                              CallExpression
                                PropertyAccessExpression
                                  Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                  DotToken
                                  Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier nextFind
                                OpenParenToken
                                SyntaxList
                                  Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier i
                                  CommaToken
                                  StringLiteral
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                        SemicolonToken
                      IfStatement
                        IfKeyword
                        OpenParenToken
                        BinaryExpression
                          Identifier - a
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/Identifier a
                          GreaterThanEqualsToken
                          NumericLiteral
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                        Block
                          OpenBraceToken
                          SyntaxList
                            VariableStatement
                              VariableDeclarationList
                                ConstKeyword
                                SyntaxList
                                  VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration e = tree.nextFind(i, ['SyntaxList', 'ExportKeyword'])
                                    Identifier - e
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier e
                                    EqualsToken
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                        DotToken
                                        Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier nextFind
                                      OpenParenToken
                                      SyntaxList
                                        Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier i
                                        CommaToken
                                        ArrayLiteralExpression
                                          OpenBracketToken
                                          SyntaxList
                                            StringLiteral
                                            CommaToken
                                            StringLiteral
                                          CloseBracketToken
                                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                              SemicolonToken
                            VariableStatement
                              VariableDeclarationList
                                ConstKeyword
                                SyntaxList
                                  VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration t = tree.prevFind(a, 'Identifier')
                                    Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier t
                                    EqualsToken
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                        DotToken
                                        Identifier - prevFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier prevFind
                                      OpenParenToken
                                      SyntaxList
                                        Identifier - a
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier a
                                        CommaToken
                                        StringLiteral
                                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                              SemicolonToken
                            IfStatement
                              IfKeyword
                              OpenParenToken
                              BinaryExpression
                                Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/Identifier t
                                GreaterThanEqualsToken
                                NumericLiteral
                              CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                              Block
                                OpenBraceToken
                                SyntaxList
                                  IfStatement
                                    IfKeyword
                                    OpenParenToken
                                    BinaryExpression
                                      BinaryExpression
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier tree
                                            DotToken
                                            Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier nextFind
                                          OpenParenToken
                                          SyntaxList
                                            Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/SyntaxList/Identifier t
                                            CommaToken
                                            StringLiteral
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/CloseParenToken )
                                        GreaterThanEqualsToken
                                        NumericLiteral
                                      BarBarToken
                                      BinaryExpression
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier tree
                                            DotToken
                                            Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier nextFind
                                          OpenParenToken
                                          SyntaxList
                                            Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/SyntaxList/Identifier t
                                            CommaToken
                                            StringLiteral
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/BinaryExpression/CallExpression/CloseParenToken )
                                        GreaterThanEqualsToken
                                        NumericLiteral
                                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                                    Block
                                      OpenBraceToken
                                      SyntaxList
                                        ExpressionStatement
                                          CallExpression
                                            PropertyAccessExpression
                                              Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                                              DotToken
                                              Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                                            OpenParenToken
                                            SyntaxList
                                              TemplateExpression
                                                TemplateHead
                                                SyntaxList
                                                  TemplateSpan
                                                    ConditionalExpression
                                                      BinaryExpression
                                                        Identifier - e
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/Identifier e
                                                        GreaterThanEqualsToken
                                                        NumericLiteral
                                                      QuestionToken
                                                      StringLiteral
                                                      ColonToken
                                                      StringLiteral
                                                    TemplateMiddle
                                                  TemplateSpan
                                                    PropertyAccessExpression
                                                      ElementAccessExpression
                                                        Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/ElementAccessExpression/Identifier result
                                                        OpenBracketToken
                                                        Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/ElementAccessExpression/Identifier t
                                                        CloseBracketToken
                                                      DotToken
                                                      Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier text
                                                    TemplateTail
                                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                          SemicolonToken
                                      CloseBraceToken
                                CloseBraceToken
                            ExpressionStatement
                              BinaryExpression
                                Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/Identifier i
                                EqualsToken
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier tree
                                    DotToken
                                    Identifier - nextFunction
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier nextFunction
                                  OpenParenToken
                                  SyntaxList
                                    Identifier - a
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/SyntaxList/Identifier a
                                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/CloseParenToken )
                              SemicolonToken
                          CloseBraceToken
                    CloseBraceToken
              CloseBraceToken
        CloseBraceToken
    TypeAliasDeclaration
SourceFile/SyntaxList/TypeAliasDeclaration type ScanNode = {
  level: number;
  export?: string;
  kind: string;
  name?: string;
};
      TypeKeyword
      Identifier - ScanNode
SourceFile/SyntaxList/TypeAliasDeclaration/Identifier ScanNode
      EqualsToken
      TypeLiteral
        OpenBraceToken
        SyntaxList
          PropertySignature
            Identifier - level
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier level
            ColonToken
            NumberKeyword
            SemicolonToken
          PropertySignature
            Identifier - export
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier export
            QuestionToken
            ColonToken
            StringKeyword
            SemicolonToken
          PropertySignature
            Identifier - kind
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier kind
            ColonToken
            StringKeyword
            SemicolonToken
          PropertySignature
            Identifier - name
SourceFile/SyntaxList/TypeAliasDeclaration/TypeLiteral/SyntaxList/PropertySignature/Identifier name
            QuestionToken
            ColonToken
            StringKeyword
            SemicolonToken
        CloseBraceToken
      SemicolonToken
    FunctionDeclaration
SourceFile/SyntaxList/FunctionDeclaration export function scanJsxElements(nodes: AstInfo[]) {
  const result: ScanNode[] = [];
  const tree = new TreeParser(nodes);
  for (let i = 0; i < nodes.length; i++) {
    const node = nodes[i];
    if (node.kind === 'ReturnStatement') {
      result.push({
        level: node.level,
        kind: node.kind,
      });
    } else if (node.kind === 'FunctionDeclaration') {
      const exp = `${tree.nextFind(i, 'ExportKeyword') >= 0 ? 'export ' : ''}`;
      const t = tree.nextFind(i, 'Identifier');
      result.push({
        level: node.level,
        export: exp,
        kind: node.kind,
        name: nodes[t].text,
      });
    } else if (node.kind === 'VariableStatement') {
      const exp = `${
        tree.nextFind(i, ['SyntaxList', 'ExportKeyword']) >= 0 ? 'export ' : ''
      }`;
      const a = tree.nextFind(i, 'ArrowFunction');
      if (a >= 0) {
        const t = tree.prevFind(a, 'Identifier');
        if (t >= 0) {
          result.push({
            level: node.level,
            export: exp,
            kind: nodes[a].kind,
            name: nodes[t].text,
          });
        } else {
          result.push({
            level: node.level,
            export: exp,
            kind: nodes[a].kind,
          });
        }
      }
    } else if (node.kind === 'JsxElement') {
      const n = tree.nextFind(i, ['JsxOpeningElement', 'Identifier']);
      if (n >= 0) {
        result.push({
          level: node.level,
          kind: node.kind,
          name: nodes[n].text,
        });
      } else {
        result.push({
          level: node.level,
          kind: node.kind,
        });
      }
    } else if (node.kind === 'JsxSelfClosingElement') {
      const n = tree.nextFind(i, ['Identifier']);
      if (n >= 0) {
        result.push({
          level: node.level,
          kind: node.kind,
          name: nodes[n].text,
        });
      } else {
        result.push({
          level: node.level,
          kind: node.kind,
        });
      }
    }
  }
  {
    let level: number[] = [];
    return result.map((node) => {
      if (level.length === 0) level.push(node.level);
      while (true) {
        if (level[level.length - 1] < node.level) {
          level.push(node.level);
        } else if (level[level.length - 1] > node.level) {
          level.pop();
        } else {
          break;
        }
      }
      node.level = level.indexOf(node.level);
      return node;
    });
  }
}
      SyntaxList
        ExportKeyword
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/ExportKeyword export
      FunctionKeyword
      Identifier - scanJsxElements
SourceFile/SyntaxList/FunctionDeclaration/Identifier scanJsxElements
      OpenParenToken
      SyntaxList
        Parameter
          Identifier - nodes
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/Identifier nodes
          ColonToken
          ArrayType
            TypeReference
              Identifier - AstInfo
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/ArrayType/TypeReference/Identifier AstInfo
            OpenBracketToken
            CloseBracketToken
      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/CloseParenToken )
      Block
        OpenBraceToken
        SyntaxList
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration result: ScanNode[] = []
                  Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier result
                  ColonToken
                  ArrayType
                    TypeReference
                      Identifier - ScanNode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrayType/TypeReference/Identifier ScanNode
                    OpenBracketToken
                    CloseBracketToken
                  EqualsToken
                  ArrayLiteralExpression
                    OpenBracketToken
                    SyntaxList
                    CloseBracketToken
            SemicolonToken
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration tree = new TreeParser(nodes)
                  Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier tree
                  EqualsToken
                  NewExpression
                    NewKeyword
                    Identifier - TreeParser
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/NewExpression/Identifier TreeParser
                    OpenParenToken
                    SyntaxList
                      Identifier - nodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/NewExpression/SyntaxList/Identifier nodes
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/NewExpression/CloseParenToken )
            SemicolonToken
          ForStatement
            ForKeyword
            OpenParenToken
            VariableDeclarationList
              LetKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration i = 0
                  Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier i
                  EqualsToken
                  NumericLiteral
            SemicolonToken
            BinaryExpression
              Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/BinaryExpression/Identifier i
              LessThanToken
              PropertyAccessExpression
                Identifier - nodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/BinaryExpression/PropertyAccessExpression/Identifier nodes
                DotToken
                Identifier - length
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/BinaryExpression/PropertyAccessExpression/Identifier length
            SemicolonToken
            PostfixUnaryExpression
              Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/PostfixUnaryExpression/Identifier i
              PlusPlusToken
            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/CloseParenToken )
            Block
              OpenBraceToken
              SyntaxList
                VariableStatement
                  VariableDeclarationList
                    ConstKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration node = nodes[i]
                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier node
                        EqualsToken
                        ElementAccessExpression
                          Identifier - nodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier nodes
                          OpenBracketToken
                          Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ElementAccessExpression/Identifier i
                          CloseBracketToken
                  SemicolonToken
                IfStatement
                  IfKeyword
                  OpenParenToken
                  BinaryExpression
                    PropertyAccessExpression
                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                      DotToken
                      Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier kind
                    EqualsEqualsEqualsToken
                    StringLiteral
                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                  Block
                    OpenBraceToken
                    SyntaxList
                      ExpressionStatement
                        CallExpression
                          PropertyAccessExpression
                            Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                            DotToken
                            Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                          OpenParenToken
                          SyntaxList
                            ObjectLiteralExpression
                              OpenBraceToken
                              SyntaxList
                                PropertyAssignment
                                  Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier level
                                  ColonToken
                                  PropertyAccessExpression
                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                    DotToken
                                    Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier level
                                CommaToken
                                PropertyAssignment
                                  Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier kind
                                  ColonToken
                                  PropertyAccessExpression
                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                    DotToken
                                    Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier kind
                                CommaToken
                              CloseBraceToken
                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                        SemicolonToken
                    CloseBraceToken
                  ElseKeyword
                  IfStatement
                    IfKeyword
                    OpenParenToken
                    BinaryExpression
                      PropertyAccessExpression
                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                        DotToken
                        Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier kind
                      EqualsEqualsEqualsToken
                      StringLiteral
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/CloseParenToken )
                    Block
                      OpenBraceToken
                      SyntaxList
                        VariableStatement
                          VariableDeclarationList
                            ConstKeyword
                            SyntaxList
                              VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration exp = `${tree.nextFind(i, 'ExportKeyword') >= 0 ? 'export ' : ''}`
                                Identifier - exp
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier exp
                                EqualsToken
                                TemplateExpression
                                  TemplateHead
                                  SyntaxList
                                    TemplateSpan
                                      ConditionalExpression
                                        BinaryExpression
                                          CallExpression
                                            PropertyAccessExpression
                                              Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier tree
                                              DotToken
                                              Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier nextFind
                                            OpenParenToken
                                            SyntaxList
                                              Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/CallExpression/SyntaxList/Identifier i
                                              CommaToken
                                              StringLiteral
                                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/CallExpression/CloseParenToken )
                                          GreaterThanEqualsToken
                                          NumericLiteral
                                        QuestionToken
                                        StringLiteral
                                        ColonToken
                                        StringLiteral
                                      TemplateTail
                          SemicolonToken
                        VariableStatement
                          VariableDeclarationList
                            ConstKeyword
                            SyntaxList
                              VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration t = tree.nextFind(i, 'Identifier')
                                Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier t
                                EqualsToken
                                CallExpression
                                  PropertyAccessExpression
                                    Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                    DotToken
                                    Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier nextFind
                                  OpenParenToken
                                  SyntaxList
                                    Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier i
                                    CommaToken
                                    StringLiteral
                                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                          SemicolonToken
                        ExpressionStatement
                          CallExpression
                            PropertyAccessExpression
                              Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                              DotToken
                              Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                            OpenParenToken
                            SyntaxList
                              ObjectLiteralExpression
                                OpenBraceToken
                                SyntaxList
                                  PropertyAssignment
                                    Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier level
                                    ColonToken
                                    PropertyAccessExpression
                                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                      DotToken
                                      Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier level
                                  CommaToken
                                  PropertyAssignment
                                    Identifier - export
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier export
                                    ColonToken
                                    Identifier - exp
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier exp
                                  CommaToken
                                  PropertyAssignment
                                    Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier kind
                                    ColonToken
                                    PropertyAccessExpression
                                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                      DotToken
                                      Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier kind
                                  CommaToken
                                  PropertyAssignment
                                    Identifier - name
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier name
                                    ColonToken
                                    PropertyAccessExpression
                                      ElementAccessExpression
                                        Identifier - nodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier nodes
                                        OpenBracketToken
                                        Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier t
                                        CloseBracketToken
                                      DotToken
                                      Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier text
                                  CommaToken
                                CloseBraceToken
                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                          SemicolonToken
                      CloseBraceToken
                    ElseKeyword
                    IfStatement
                      IfKeyword
                      OpenParenToken
                      BinaryExpression
                        PropertyAccessExpression
                          Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                          DotToken
                          Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier kind
                        EqualsEqualsEqualsToken
                        StringLiteral
                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/CloseParenToken )
                      Block
                        OpenBraceToken
                        SyntaxList
                          VariableStatement
                            VariableDeclarationList
                              ConstKeyword
                              SyntaxList
                                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration exp = `${
        tree.nextFind(i, ['SyntaxList', 'ExportKeyword']) >= 0 ? 'export ' : ''
      }`
                                  Identifier - exp
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier exp
                                  EqualsToken
                                  TemplateExpression
                                    TemplateHead
                                    SyntaxList
                                      TemplateSpan
                                        ConditionalExpression
                                          BinaryExpression
                                            CallExpression
                                              PropertyAccessExpression
                                                Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier tree
                                                DotToken
                                                Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier nextFind
                                              OpenParenToken
                                              SyntaxList
                                                Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/CallExpression/SyntaxList/Identifier i
                                                CommaToken
                                                ArrayLiteralExpression
                                                  OpenBracketToken
                                                  SyntaxList
                                                    StringLiteral
                                                    CommaToken
                                                    StringLiteral
                                                  CloseBracketToken
                                              CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/CallExpression/CloseParenToken )
                                            GreaterThanEqualsToken
                                            NumericLiteral
                                          QuestionToken
                                          StringLiteral
                                          ColonToken
                                          StringLiteral
                                        TemplateTail
                            SemicolonToken
                          VariableStatement
                            VariableDeclarationList
                              ConstKeyword
                              SyntaxList
                                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration a = tree.nextFind(i, 'ArrowFunction')
                                  Identifier - a
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier a
                                  EqualsToken
                                  CallExpression
                                    PropertyAccessExpression
                                      Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                      DotToken
                                      Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier nextFind
                                    OpenParenToken
                                    SyntaxList
                                      Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier i
                                      CommaToken
                                      StringLiteral
                                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                            SemicolonToken
                          IfStatement
                            IfKeyword
                            OpenParenToken
                            BinaryExpression
                              Identifier - a
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/Identifier a
                              GreaterThanEqualsToken
                              NumericLiteral
                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                            Block
                              OpenBraceToken
                              SyntaxList
                                VariableStatement
                                  VariableDeclarationList
                                    ConstKeyword
                                    SyntaxList
                                      VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration t = tree.prevFind(a, 'Identifier')
                                        Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier t
                                        EqualsToken
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                            DotToken
                                            Identifier - prevFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier prevFind
                                          OpenParenToken
                                          SyntaxList
                                            Identifier - a
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier a
                                            CommaToken
                                            StringLiteral
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                                  SemicolonToken
                                IfStatement
                                  IfKeyword
                                  OpenParenToken
                                  BinaryExpression
                                    Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/Identifier t
                                    GreaterThanEqualsToken
                                    NumericLiteral
                                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                                  Block
                                    OpenBraceToken
                                    SyntaxList
                                      ExpressionStatement
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                                            DotToken
                                            Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                                          OpenParenToken
                                          SyntaxList
                                            ObjectLiteralExpression
                                              OpenBraceToken
                                              SyntaxList
                                                PropertyAssignment
                                                  Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier level
                                                  ColonToken
                                                  PropertyAccessExpression
                                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                                    DotToken
                                                    Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier level
                                                CommaToken
                                                PropertyAssignment
                                                  Identifier - export
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier export
                                                  ColonToken
                                                  Identifier - exp
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier exp
                                                CommaToken
                                                PropertyAssignment
                                                  Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier kind
                                                  ColonToken
                                                  PropertyAccessExpression
                                                    ElementAccessExpression
                                                      Identifier - nodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier nodes
                                                      OpenBracketToken
                                                      Identifier - a
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier a
                                                      CloseBracketToken
                                                    DotToken
                                                    Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier kind
                                                CommaToken
                                                PropertyAssignment
                                                  Identifier - name
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier name
                                                  ColonToken
                                                  PropertyAccessExpression
                                                    ElementAccessExpression
                                                      Identifier - nodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier nodes
                                                      OpenBracketToken
                                                      Identifier - t
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier t
                                                      CloseBracketToken
                                                    DotToken
                                                    Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier text
                                                CommaToken
                                              CloseBraceToken
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                        SemicolonToken
                                    CloseBraceToken
                                  ElseKeyword
                                  Block
                                    OpenBraceToken
                                    SyntaxList
                                      ExpressionStatement
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                                            DotToken
                                            Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                                          OpenParenToken
                                          SyntaxList
                                            ObjectLiteralExpression
                                              OpenBraceToken
                                              SyntaxList
                                                PropertyAssignment
                                                  Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier level
                                                  ColonToken
                                                  PropertyAccessExpression
                                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                                    DotToken
                                                    Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier level
                                                CommaToken
                                                PropertyAssignment
                                                  Identifier - export
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier export
                                                  ColonToken
                                                  Identifier - exp
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier exp
                                                CommaToken
                                                PropertyAssignment
                                                  Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier kind
                                                  ColonToken
                                                  PropertyAccessExpression
                                                    ElementAccessExpression
                                                      Identifier - nodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier nodes
                                                      OpenBracketToken
                                                      Identifier - a
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier a
                                                      CloseBracketToken
                                                    DotToken
                                                    Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier kind
                                                CommaToken
                                              CloseBraceToken
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                        SemicolonToken
                                    CloseBraceToken
                              CloseBraceToken
                        CloseBraceToken
                      ElseKeyword
                      IfStatement
                        IfKeyword
                        OpenParenToken
                        BinaryExpression
                          PropertyAccessExpression
                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                            DotToken
                            Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier kind
                          EqualsEqualsEqualsToken
                          StringLiteral
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/CloseParenToken )
                        Block
                          OpenBraceToken
                          SyntaxList
                            VariableStatement
                              VariableDeclarationList
                                ConstKeyword
                                SyntaxList
                                  VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration n = tree.nextFind(i, ['JsxOpeningElement', 'Identifier'])
                                    Identifier - n
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier n
                                    EqualsToken
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                        DotToken
                                        Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier nextFind
                                      OpenParenToken
                                      SyntaxList
                                        Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier i
                                        CommaToken
                                        ArrayLiteralExpression
                                          OpenBracketToken
                                          SyntaxList
                                            StringLiteral
                                            CommaToken
                                            StringLiteral
                                          CloseBracketToken
                                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                              SemicolonToken
                            IfStatement
                              IfKeyword
                              OpenParenToken
                              BinaryExpression
                                Identifier - n
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/Identifier n
                                GreaterThanEqualsToken
                                NumericLiteral
                              CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                              Block
                                OpenBraceToken
                                SyntaxList
                                  ExpressionStatement
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                                        DotToken
                                        Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                                      OpenParenToken
                                      SyntaxList
                                        ObjectLiteralExpression
                                          OpenBraceToken
                                          SyntaxList
                                            PropertyAssignment
                                              Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier level
                                              ColonToken
                                              PropertyAccessExpression
                                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                                DotToken
                                                Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier level
                                            CommaToken
                                            PropertyAssignment
                                              Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier kind
                                              ColonToken
                                              PropertyAccessExpression
                                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                                DotToken
                                                Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier kind
                                            CommaToken
                                            PropertyAssignment
                                              Identifier - name
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier name
                                              ColonToken
                                              PropertyAccessExpression
                                                ElementAccessExpression
                                                  Identifier - nodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier nodes
                                                  OpenBracketToken
                                                  Identifier - n
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier n
                                                  CloseBracketToken
                                                DotToken
                                                Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier text
                                            CommaToken
                                          CloseBraceToken
                                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                    SemicolonToken
                                CloseBraceToken
                              ElseKeyword
                              Block
                                OpenBraceToken
                                SyntaxList
                                  ExpressionStatement
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                                        DotToken
                                        Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                                      OpenParenToken
                                      SyntaxList
                                        ObjectLiteralExpression
                                          OpenBraceToken
                                          SyntaxList
                                            PropertyAssignment
                                              Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier level
                                              ColonToken
                                              PropertyAccessExpression
                                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                                DotToken
                                                Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier level
                                            CommaToken
                                            PropertyAssignment
                                              Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier kind
                                              ColonToken
                                              PropertyAccessExpression
                                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                                DotToken
                                                Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier kind
                                            CommaToken
                                          CloseBraceToken
                                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                    SemicolonToken
                                CloseBraceToken
                          CloseBraceToken
                        ElseKeyword
                        IfStatement
                          IfKeyword
                          OpenParenToken
                          BinaryExpression
                            PropertyAccessExpression
                              Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                              DotToken
                              Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier kind
                            EqualsEqualsEqualsToken
                            StringLiteral
                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/CloseParenToken )
                          Block
                            OpenBraceToken
                            SyntaxList
                              VariableStatement
                                VariableDeclarationList
                                  ConstKeyword
                                  SyntaxList
                                    VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration n = tree.nextFind(i, ['Identifier'])
                                      Identifier - n
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier n
                                      EqualsToken
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier - tree
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier tree
                                          DotToken
                                          Identifier - nextFind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier nextFind
                                        OpenParenToken
                                        SyntaxList
                                          Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier i
                                          CommaToken
                                          ArrayLiteralExpression
                                            OpenBracketToken
                                            SyntaxList
                                              StringLiteral
                                            CloseBracketToken
                                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                                SemicolonToken
                              IfStatement
                                IfKeyword
                                OpenParenToken
                                BinaryExpression
                                  Identifier - n
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/Identifier n
                                  GreaterThanEqualsToken
                                  NumericLiteral
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                                Block
                                  OpenBraceToken
                                  SyntaxList
                                    ExpressionStatement
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                                          DotToken
                                          Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                                        OpenParenToken
                                        SyntaxList
                                          ObjectLiteralExpression
                                            OpenBraceToken
                                            SyntaxList
                                              PropertyAssignment
                                                Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier level
                                                ColonToken
                                                PropertyAccessExpression
                                                  Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                                  DotToken
                                                  Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier level
                                              CommaToken
                                              PropertyAssignment
                                                Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier kind
                                                ColonToken
                                                PropertyAccessExpression
                                                  Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                                  DotToken
                                                  Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier kind
                                              CommaToken
                                              PropertyAssignment
                                                Identifier - name
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier name
                                                ColonToken
                                                PropertyAccessExpression
                                                  ElementAccessExpression
                                                    Identifier - nodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier nodes
                                                    OpenBracketToken
                                                    Identifier - n
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/ElementAccessExpression/Identifier n
                                                    CloseBracketToken
                                                  DotToken
                                                  Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier text
                                              CommaToken
                                            CloseBraceToken
                                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                      SemicolonToken
                                  CloseBraceToken
                                ElseKeyword
                                Block
                                  OpenBraceToken
                                  SyntaxList
                                    ExpressionStatement
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                                          DotToken
                                          Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                                        OpenParenToken
                                        SyntaxList
                                          ObjectLiteralExpression
                                            OpenBraceToken
                                            SyntaxList
                                              PropertyAssignment
                                                Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier level
                                                ColonToken
                                                PropertyAccessExpression
                                                  Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                                  DotToken
                                                  Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier level
                                              CommaToken
                                              PropertyAssignment
                                                Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier kind
                                                ColonToken
                                                PropertyAccessExpression
                                                  Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier node
                                                  DotToken
                                                  Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/PropertyAccessExpression/Identifier kind
                                              CommaToken
                                            CloseBraceToken
                                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ForStatement/Block/SyntaxList/IfStatement/IfStatement/IfStatement/IfStatement/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                      SemicolonToken
                                  CloseBraceToken
                            CloseBraceToken
              CloseBraceToken
          Block
            OpenBraceToken
            SyntaxList
              VariableStatement
                VariableDeclarationList
                  LetKeyword
                  SyntaxList
                    VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration level: number[] = []
                      Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier level
                      ColonToken
                      ArrayType
                        NumberKeyword
                        OpenBracketToken
                        CloseBracketToken
                      EqualsToken
                      ArrayLiteralExpression
                        OpenBracketToken
                        SyntaxList
                        CloseBracketToken
                SemicolonToken
              ReturnStatement
                ReturnKeyword
                CallExpression
                  PropertyAccessExpression
                    Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/PropertyAccessExpression/Identifier result
                    DotToken
                    Identifier - map
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/PropertyAccessExpression/Identifier map
                  OpenParenToken
                  SyntaxList
                    ArrowFunction
                      OpenParenToken
                      SyntaxList
                        Parameter
                          Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/SyntaxList/Parameter/Identifier node
                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/CloseParenToken )
                      EqualsGreaterThanToken
                      Block
                        OpenBraceToken
                        SyntaxList
                          IfStatement
                            IfKeyword
                            OpenParenToken
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier level
                                DotToken
                                Identifier - length
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier length
                              EqualsEqualsEqualsToken
                              NumericLiteral
                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/CloseParenToken )
                            ExpressionStatement
                              CallExpression
                                PropertyAccessExpression
                                  Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier level
                                  DotToken
                                  Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                                OpenParenToken
                                SyntaxList
                                  PropertyAccessExpression
                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/ExpressionStatement/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                                    DotToken
                                    Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/ExpressionStatement/CallExpression/SyntaxList/PropertyAccessExpression/Identifier level
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/ExpressionStatement/CallExpression/CloseParenToken )
                              SemicolonToken
                          WhileStatement
                            WhileKeyword
                            OpenParenToken
                            TrueKeyword
                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/CloseParenToken )
                            Block
                              OpenBraceToken
                              SyntaxList
                                IfStatement
                                  IfKeyword
                                  OpenParenToken
                                  BinaryExpression
                                    ElementAccessExpression
                                      Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/BinaryExpression/ElementAccessExpression/Identifier level
                                      OpenBracketToken
                                      BinaryExpression
                                        PropertyAccessExpression
                                          Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/BinaryExpression/ElementAccessExpression/BinaryExpression/PropertyAccessExpression/Identifier level
                                          DotToken
                                          Identifier - length
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/BinaryExpression/ElementAccessExpression/BinaryExpression/PropertyAccessExpression/Identifier length
                                        MinusToken
                                        NumericLiteral
                                      CloseBracketToken
                                    LessThanToken
                                    PropertyAccessExpression
                                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                      DotToken
                                      Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier level
                                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                                  Block
                                    OpenBraceToken
                                    SyntaxList
                                      ExpressionStatement
                                        CallExpression
                                          PropertyAccessExpression
                                            Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier level
                                            DotToken
                                            Identifier - push
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier push
                                          OpenParenToken
                                          SyntaxList
                                            PropertyAccessExpression
                                              Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                                              DotToken
                                              Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/PropertyAccessExpression/Identifier level
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                        SemicolonToken
                                    CloseBraceToken
                                  ElseKeyword
                                  IfStatement
                                    IfKeyword
                                    OpenParenToken
                                    BinaryExpression
                                      ElementAccessExpression
                                        Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/IfStatement/BinaryExpression/ElementAccessExpression/Identifier level
                                        OpenBracketToken
                                        BinaryExpression
                                          PropertyAccessExpression
                                            Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/IfStatement/BinaryExpression/ElementAccessExpression/BinaryExpression/PropertyAccessExpression/Identifier level
                                            DotToken
                                            Identifier - length
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/IfStatement/BinaryExpression/ElementAccessExpression/BinaryExpression/PropertyAccessExpression/Identifier length
                                          MinusToken
                                          NumericLiteral
                                        CloseBracketToken
                                      GreaterThanToken
                                      PropertyAccessExpression
                                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                        DotToken
                                        Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier level
                                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/IfStatement/CloseParenToken )
                                    Block
                                      OpenBraceToken
                                      SyntaxList
                                        ExpressionStatement
                                          CallExpression
                                            PropertyAccessExpression
                                              Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier level
                                              DotToken
                                              Identifier - pop
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier pop
                                            OpenParenToken
                                            SyntaxList
                                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/WhileStatement/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                          SemicolonToken
                                      CloseBraceToken
                                    ElseKeyword
                                    Block
                                      OpenBraceToken
                                      SyntaxList
                                        BreakStatement
                                          BreakKeyword
                                          SemicolonToken
                                      CloseBraceToken
                              CloseBraceToken
                          ExpressionStatement
                            BinaryExpression
                              PropertyAccessExpression
                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                DotToken
                                Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/BinaryExpression/PropertyAccessExpression/Identifier level
                              EqualsToken
                              CallExpression
                                PropertyAccessExpression
                                  Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier level
                                  DotToken
                                  Identifier - indexOf
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/PropertyAccessExpression/Identifier indexOf
                                OpenParenToken
                                SyntaxList
                                  PropertyAccessExpression
                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                                    DotToken
                                    Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/SyntaxList/PropertyAccessExpression/Identifier level
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ExpressionStatement/BinaryExpression/CallExpression/CloseParenToken )
                            SemicolonToken
                          ReturnStatement
                            ReturnKeyword
                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/ReturnStatement/Identifier node
                            SemicolonToken
                        CloseBraceToken
                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/Block/SyntaxList/ReturnStatement/CallExpression/CloseParenToken )
                SemicolonToken
            CloseBraceToken
        CloseBraceToken
    FunctionDeclaration
SourceFile/SyntaxList/FunctionDeclaration async function main(arg: string[]) {
  const argv = yargs(hideBin(arg))
    .detectLocale(false)
    .scriptName('ts-parser')
    .usage('$0 [options] <source>', 'Parse a typescript source.')
    .options({
      source: { type: 'string', demandOption: true },
      mode: {
        choices: [
          'src',
          'tree',
          'json',
          'element',
          'jsx-component',
          'jsx-element',
        ],
        default: 'tree',
        describe: 'output type',
        demandOption: true,
      },
    })
    .help()
    .parseSync();

  const sourcePath = `${argv.source}`;

  const sourceCode = fs.readFileSync(sourcePath, 'utf-8').trim();

  const sourceFile = ts.createSourceFile(
    sourcePath,
    sourceCode,
    ts.ScriptTarget.ES5,
    true
  );

  const result: AstInfo[] = [];
  scanAllChildren(result, sourceFile, -1);

  // ソース再生成
  if (argv.mode === 'src') {
    let line = 0;
    let pre = -1;
    let pos = 0;
    let kind: ReturnType<typeof ts.Debug.formatSyntaxKind> = 'SourceFile';
    result.forEach((node) => {
      if (node.element) {
        if (node.line !== line) {
          for (let i = 0; i < node.line - line; i++) {
            console.log('');
          }
          pos = node.pos;
        }
        if (pos !== node.pos) {
          for (let i = 0; i < node.pos - pos; i++) {
            process.stdout.write(' ');
          }
        }
        if (pre <= node.pos) {
          process.stdout.write(node.text);
        }
        line = node.endl;
        pos = node.end;
        kind = node.kind;
        pre = pos;
      }
    });
  }

  // JSON形式
  if (argv.mode === 'json') {
    console.log(JSON.stringify(result, null, '  '));
  }

  // JSON形式(elementのみ)
  if (argv.mode === 'element') {
    console.log(
      JSON.stringify(
        result.filter((v) => v.element),
        null,
        '  '
      )
    );
  }

  // TREE形式
  if (argv.mode === 'tree') {
    console.log(`### ${sourcePath}`);
    result.forEach((node) => {
      if (node.kind.match(/Trivia$/)) {
        console.log(
          `${indent(node.level)}${node.kind} ${
            node.hasNodes ? '' : node.text.replace(/\n/g, '\\n')
          }`
        );
      } else if (node.kind.match(/JsxElement/)) {
        console.log(`${indent(node.level)}${node.kind} ${node.text}`);
      } else {
        console.log(
          `${indent(node.level)}${node.kind} ${node.hasNodes ? '' : node.text}`
        );
      }
    });
  }

  // Reactコンポーネント
  if (argv.mode === 'jsx-component') {
    console.log(`### ${sourcePath}`);
    scanJsxFunctions(result);
  }

  // JSXエレメント
  if (argv.mode === 'jsx-element') {
    console.log(`### ${sourcePath}`);
    const retval = scanJsxElements(result);
    // console.log(JSON.stringify(retval, null, '  '));
    retval.forEach((node) =>
      console.log(
        `${indent(node.level)}${node.kind} ${
          node.name !== undefined ? `"${node.name}"` : ''
        }`
      )
    );
  }
}
      SyntaxList
        AsyncKeyword
      FunctionKeyword
      Identifier - main
SourceFile/SyntaxList/FunctionDeclaration/Identifier main
      OpenParenToken
      SyntaxList
        Parameter
          Identifier - arg
SourceFile/SyntaxList/FunctionDeclaration/SyntaxList/Parameter/Identifier arg
          ColonToken
          ArrayType
            StringKeyword
            OpenBracketToken
            CloseBracketToken
      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/CloseParenToken )
      Block
        OpenBraceToken
        SyntaxList
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration argv = yargs(hideBin(arg))
    .detectLocale(false)
    .scriptName('ts-parser')
    .usage('$0 [options] <source>', 'Parse a typescript source.')
    .options({
      source: { type: 'string', demandOption: true },
      mode: {
        choices: [
          'src',
          'tree',
          'json',
          'element',
          'jsx-component',
          'jsx-element',
        ],
        default: 'tree',
        describe: 'output type',
        demandOption: true,
      },
    })
    .help()
    .parseSync()
                  Identifier - argv
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier argv
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      CallExpression
                        PropertyAccessExpression
                          CallExpression
                            PropertyAccessExpression
                              CallExpression
                                PropertyAccessExpression
                                  CallExpression
                                    PropertyAccessExpression
                                      CallExpression
                                        PropertyAccessExpression
                                          CallExpression
                                            Identifier - yargs
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/Identifier yargs
                                            OpenParenToken
                                            SyntaxList
                                              CallExpression
                                                Identifier - hideBin
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/CallExpression/Identifier hideBin
                                                OpenParenToken
                                                SyntaxList
                                                  Identifier - arg
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/CallExpression/SyntaxList/Identifier arg
                                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/CallExpression/CloseParenToken )
                                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/CloseParenToken )
                                          DotToken
                                          Identifier - detectLocale
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/Identifier detectLocale
                                        OpenParenToken
                                        SyntaxList
                                          FalseKeyword
                                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/CloseParenToken )
                                      DotToken
                                      Identifier - scriptName
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/Identifier scriptName
                                    OpenParenToken
                                    SyntaxList
                                      StringLiteral
                                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/CloseParenToken )
                                  DotToken
                                  Identifier - usage
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/Identifier usage
                                OpenParenToken
                                SyntaxList
                                  StringLiteral
                                  CommaToken
                                  StringLiteral
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/CloseParenToken )
                              DotToken
                              Identifier - options
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/Identifier options
                            OpenParenToken
                            SyntaxList
                              ObjectLiteralExpression
                                OpenBraceToken
                                SyntaxList
                                  PropertyAssignment
                                    Identifier - source
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier source
                                    ColonToken
                                    ObjectLiteralExpression
                                      OpenBraceToken
                                      SyntaxList
                                        PropertyAssignment
                                          Identifier - type
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier type
                                          ColonToken
                                          StringLiteral
                                        CommaToken
                                        PropertyAssignment
                                          Identifier - demandOption
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier demandOption
                                          ColonToken
                                          TrueKeyword
                                      CloseBraceToken
                                  CommaToken
                                  PropertyAssignment
                                    Identifier - mode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier mode
                                    ColonToken
                                    ObjectLiteralExpression
                                      OpenBraceToken
                                      SyntaxList
                                        PropertyAssignment
                                          Identifier - choices
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier choices
                                          ColonToken
                                          ArrayLiteralExpression
                                            OpenBracketToken
                                            SyntaxList
                                              StringLiteral
                                              CommaToken
                                              StringLiteral
                                              CommaToken
                                              StringLiteral
                                              CommaToken
                                              StringLiteral
                                              CommaToken
                                              StringLiteral
                                              CommaToken
                                              StringLiteral
                                              CommaToken
                                            CloseBracketToken
                                        CommaToken
                                        PropertyAssignment
                                          Identifier - default
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier default
                                          ColonToken
                                          StringLiteral
                                        CommaToken
                                        PropertyAssignment
                                          Identifier - describe
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier describe
                                          ColonToken
                                          StringLiteral
                                        CommaToken
                                        PropertyAssignment
                                          Identifier - demandOption
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/ObjectLiteralExpression/SyntaxList/PropertyAssignment/ObjectLiteralExpression/SyntaxList/PropertyAssignment/Identifier demandOption
                                          ColonToken
                                          TrueKeyword
                                        CommaToken
                                      CloseBraceToken
                                  CommaToken
                                CloseBraceToken
                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/CallExpression/CloseParenToken )
                          DotToken
                          Identifier - help
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/Identifier help
                        OpenParenToken
                        SyntaxList
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/CloseParenToken )
                      DotToken
                      Identifier - parseSync
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier parseSync
                    OpenParenToken
                    SyntaxList
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
            SemicolonToken
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration sourcePath = `${argv.source}`
                  Identifier - sourcePath
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier sourcePath
                  EqualsToken
                  TemplateExpression
                    TemplateHead
                    SyntaxList
                      TemplateSpan
                        PropertyAccessExpression
                          Identifier - argv
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier argv
                          DotToken
                          Identifier - source
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier source
                        TemplateTail
            SemicolonToken
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration sourceCode = fs.readFileSync(sourcePath, 'utf-8').trim()
                  Identifier - sourceCode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier sourceCode
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      CallExpression
                        PropertyAccessExpression
                          Identifier - fs
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/Identifier fs
                          DotToken
                          Identifier - readFileSync
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/PropertyAccessExpression/Identifier readFileSync
                        OpenParenToken
                        SyntaxList
                          Identifier - sourcePath
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/SyntaxList/Identifier sourcePath
                          CommaToken
                          StringLiteral
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/CallExpression/CloseParenToken )
                      DotToken
                      Identifier - trim
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier trim
                    OpenParenToken
                    SyntaxList
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
            SemicolonToken
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration sourceFile = ts.createSourceFile(
    sourcePath,
    sourceCode,
    ts.ScriptTarget.ES5,
    true
  )
                  Identifier - sourceFile
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier sourceFile
                  EqualsToken
                  CallExpression
                    PropertyAccessExpression
                      Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier ts
                      DotToken
                      Identifier - createSourceFile
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/PropertyAccessExpression/Identifier createSourceFile
                    OpenParenToken
                    SyntaxList
                      Identifier - sourcePath
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier sourcePath
                      CommaToken
                      Identifier - sourceCode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier sourceCode
                      CommaToken
                      PropertyAccessExpression
                        PropertyAccessExpression
                          Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/PropertyAccessExpression/Identifier ts
                          DotToken
                          Identifier - ScriptTarget
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/PropertyAccessExpression/Identifier ScriptTarget
                        DotToken
                        Identifier - ES5
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/PropertyAccessExpression/Identifier ES5
                      CommaToken
                      TrueKeyword
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
            SemicolonToken
          VariableStatement
            VariableDeclarationList
              ConstKeyword
              SyntaxList
                VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration result: AstInfo[] = []
                  Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier result
                  ColonToken
                  ArrayType
                    TypeReference
                      Identifier - AstInfo
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/ArrayType/TypeReference/Identifier AstInfo
                    OpenBracketToken
                    CloseBracketToken
                  EqualsToken
                  ArrayLiteralExpression
                    OpenBracketToken
                    SyntaxList
                    CloseBracketToken
            SemicolonToken
          ExpressionStatement
            CallExpression
              Identifier - scanAllChildren
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/Identifier scanAllChildren
              OpenParenToken
              SyntaxList
                Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/Identifier result
                CommaToken
                Identifier - sourceFile
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/Identifier sourceFile
                CommaToken
                PrefixUnaryExpression
                  MinusToken
                  NumericLiteral
              CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
            SemicolonToken
          SingleLineCommentTrivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/SingleLineCommentTrivia // ソース再生成
          IfStatement
            IfKeyword
            OpenParenToken
            BinaryExpression
              PropertyAccessExpression
                Identifier - argv
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier argv
                DotToken
                Identifier - mode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier mode
              EqualsEqualsEqualsToken
              StringLiteral
            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/CloseParenToken )
            Block
              OpenBraceToken
              SyntaxList
                VariableStatement
                  VariableDeclarationList
                    LetKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration line = 0
                        Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier line
                        EqualsToken
                        NumericLiteral
                  SemicolonToken
                VariableStatement
                  VariableDeclarationList
                    LetKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration pre = -1
                        Identifier - pre
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier pre
                        EqualsToken
                        PrefixUnaryExpression
                          MinusToken
                          NumericLiteral
                  SemicolonToken
                VariableStatement
                  VariableDeclarationList
                    LetKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration pos = 0
                        Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier pos
                        EqualsToken
                        NumericLiteral
                  SemicolonToken
                VariableStatement
                  VariableDeclarationList
                    LetKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration kind: ReturnType<typeof ts.Debug.formatSyntaxKind> = 'SourceFile'
                        Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier kind
                        ColonToken
                        TypeReference
                          Identifier - ReturnType
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TypeReference/Identifier ReturnType
                          LessThanToken
                          SyntaxList
                            TypeQuery
                              TypeOfKeyword
                              QualifiedName
                                QualifiedName
                                  Identifier - ts
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TypeReference/SyntaxList/TypeQuery/QualifiedName/QualifiedName/Identifier ts
                                  DotToken
                                  Identifier - Debug
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TypeReference/SyntaxList/TypeQuery/QualifiedName/QualifiedName/Identifier Debug
                                DotToken
                                Identifier - formatSyntaxKind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/TypeReference/SyntaxList/TypeQuery/QualifiedName/Identifier formatSyntaxKind
                          GreaterThanToken
                        EqualsToken
                        StringLiteral
                  SemicolonToken
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                      DotToken
                      Identifier - forEach
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier forEach
                    OpenParenToken
                    SyntaxList
                      ArrowFunction
                        OpenParenToken
                        SyntaxList
                          Parameter
                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/SyntaxList/Parameter/Identifier node
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CloseParenToken )
                        EqualsGreaterThanToken
                        Block
                          OpenBraceToken
                          SyntaxList
                            IfStatement
                              IfKeyword
                              OpenParenToken
                              PropertyAccessExpression
                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/PropertyAccessExpression/Identifier node
                                DotToken
                                Identifier - element
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/PropertyAccessExpression/Identifier element
                              CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/CloseParenToken )
                              Block
                                OpenBraceToken
                                SyntaxList
                                  IfStatement
                                    IfKeyword
                                    OpenParenToken
                                    BinaryExpression
                                      PropertyAccessExpression
                                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                        DotToken
                                        Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier line
                                      ExclamationEqualsEqualsToken
                                      Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/Identifier line
                                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                                    Block
                                      OpenBraceToken
                                      SyntaxList
                                        ForStatement
                                          ForKeyword
                                          OpenParenToken
                                          VariableDeclarationList
                                            LetKeyword
                                            SyntaxList
                                              VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration i = 0
                                                Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier i
                                                EqualsToken
                                                NumericLiteral
                                          SemicolonToken
                                          BinaryExpression
                                            Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/Identifier i
                                            LessThanToken
                                            BinaryExpression
                                              PropertyAccessExpression
                                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier node
                                                DotToken
                                                Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier line
                                              MinusToken
                                              Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/BinaryExpression/Identifier line
                                          SemicolonToken
                                          PostfixUnaryExpression
                                            Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/PostfixUnaryExpression/Identifier i
                                            PlusPlusToken
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/CloseParenToken )
                                          Block
                                            OpenBraceToken
                                            SyntaxList
                                              ExpressionStatement
                                                CallExpression
                                                  PropertyAccessExpression
                                                    Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                                                    DotToken
                                                    Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                                                  OpenParenToken
                                                  SyntaxList
                                                    StringLiteral
                                                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                                SemicolonToken
                                            CloseBraceToken
                                        ExpressionStatement
                                          BinaryExpression
                                            Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/Identifier pos
                                            EqualsToken
                                            PropertyAccessExpression
                                              Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                              DotToken
                                              Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/PropertyAccessExpression/Identifier pos
                                          SemicolonToken
                                      CloseBraceToken
                                  IfStatement
                                    IfKeyword
                                    OpenParenToken
                                    BinaryExpression
                                      Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/Identifier pos
                                      ExclamationEqualsEqualsToken
                                      PropertyAccessExpression
                                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                        DotToken
                                        Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier pos
                                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                                    Block
                                      OpenBraceToken
                                      SyntaxList
                                        ForStatement
                                          ForKeyword
                                          OpenParenToken
                                          VariableDeclarationList
                                            LetKeyword
                                            SyntaxList
                                              VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration i = 0
                                                Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier i
                                                EqualsToken
                                                NumericLiteral
                                          SemicolonToken
                                          BinaryExpression
                                            Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/Identifier i
                                            LessThanToken
                                            BinaryExpression
                                              PropertyAccessExpression
                                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier node
                                                DotToken
                                                Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/BinaryExpression/PropertyAccessExpression/Identifier pos
                                              MinusToken
                                              Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/BinaryExpression/BinaryExpression/Identifier pos
                                          SemicolonToken
                                          PostfixUnaryExpression
                                            Identifier - i
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/PostfixUnaryExpression/Identifier i
                                            PlusPlusToken
                                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/CloseParenToken )
                                          Block
                                            OpenBraceToken
                                            SyntaxList
                                              ExpressionStatement
                                                CallExpression
                                                  PropertyAccessExpression
                                                    PropertyAccessExpression
                                                      Identifier - process
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier process
                                                      DotToken
                                                      Identifier - stdout
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier stdout
                                                    DotToken
                                                    Identifier - write
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier write
                                                  OpenParenToken
                                                  SyntaxList
                                                    StringLiteral
                                                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ForStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                                SemicolonToken
                                            CloseBraceToken
                                      CloseBraceToken
                                  IfStatement
                                    IfKeyword
                                    OpenParenToken
                                    BinaryExpression
                                      Identifier - pre
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/Identifier pre
                                      LessThanEqualsToken
                                      PropertyAccessExpression
                                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                        DotToken
                                        Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier pos
                                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/CloseParenToken )
                                    Block
                                      OpenBraceToken
                                      SyntaxList
                                        ExpressionStatement
                                          CallExpression
                                            PropertyAccessExpression
                                              PropertyAccessExpression
                                                Identifier - process
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier process
                                                DotToken
                                                Identifier - stdout
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier stdout
                                              DotToken
                                              Identifier - write
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier write
                                            OpenParenToken
                                            SyntaxList
                                              PropertyAccessExpression
                                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                                                DotToken
                                                Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/PropertyAccessExpression/Identifier text
                                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                          SemicolonToken
                                      CloseBraceToken
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier - line
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/Identifier line
                                      EqualsToken
                                      PropertyAccessExpression
                                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                        DotToken
                                        Identifier - endl
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/PropertyAccessExpression/Identifier endl
                                    SemicolonToken
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/Identifier pos
                                      EqualsToken
                                      PropertyAccessExpression
                                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                        DotToken
                                        Identifier - end
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/PropertyAccessExpression/Identifier end
                                    SemicolonToken
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/Identifier kind
                                      EqualsToken
                                      PropertyAccessExpression
                                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/PropertyAccessExpression/Identifier node
                                        DotToken
                                        Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/PropertyAccessExpression/Identifier kind
                                    SemicolonToken
                                  ExpressionStatement
                                    BinaryExpression
                                      Identifier - pre
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/Identifier pre
                                      EqualsToken
                                      Identifier - pos
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/BinaryExpression/Identifier pos
                                    SemicolonToken
                                CloseBraceToken
                          CloseBraceToken
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                  SemicolonToken
              CloseBraceToken
          SingleLineCommentTrivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/SingleLineCommentTrivia // JSON形式
          IfStatement
            IfKeyword
            OpenParenToken
            BinaryExpression
              PropertyAccessExpression
                Identifier - argv
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier argv
                DotToken
                Identifier - mode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier mode
              EqualsEqualsEqualsToken
              StringLiteral
            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/CloseParenToken )
            Block
              OpenBraceToken
              SyntaxList
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                      DotToken
                      Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                    OpenParenToken
                    SyntaxList
                      CallExpression
                        PropertyAccessExpression
                          Identifier - JSON
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier JSON
                          DotToken
                          Identifier - stringify
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier stringify
                        OpenParenToken
                        SyntaxList
                          Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/SyntaxList/Identifier result
                          CommaToken
                          NullKeyword
                          CommaToken
                          StringLiteral
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/CloseParenToken )
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                  SemicolonToken
              CloseBraceToken
          SingleLineCommentTrivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/SingleLineCommentTrivia // JSON形式(elementのみ)
          IfStatement
            IfKeyword
            OpenParenToken
            BinaryExpression
              PropertyAccessExpression
                Identifier - argv
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier argv
                DotToken
                Identifier - mode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier mode
              EqualsEqualsEqualsToken
              StringLiteral
            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/CloseParenToken )
            Block
              OpenBraceToken
              SyntaxList
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                      DotToken
                      Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                    OpenParenToken
                    SyntaxList
                      CallExpression
                        PropertyAccessExpression
                          Identifier - JSON
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier JSON
                          DotToken
                          Identifier - stringify
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier stringify
                        OpenParenToken
                        SyntaxList
                          CallExpression
                            PropertyAccessExpression
                              Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier result
                              DotToken
                              Identifier - filter
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/SyntaxList/CallExpression/PropertyAccessExpression/Identifier filter
                            OpenParenToken
                            SyntaxList
                              ArrowFunction
                                OpenParenToken
                                SyntaxList
                                  Parameter
                                    Identifier - v
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/SyntaxList/CallExpression/SyntaxList/ArrowFunction/SyntaxList/Parameter/Identifier v
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/SyntaxList/CallExpression/SyntaxList/ArrowFunction/CloseParenToken )
                                EqualsGreaterThanToken
                                PropertyAccessExpression
                                  Identifier - v
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/SyntaxList/CallExpression/SyntaxList/ArrowFunction/PropertyAccessExpression/Identifier v
                                  DotToken
                                  Identifier - element
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/SyntaxList/CallExpression/SyntaxList/ArrowFunction/PropertyAccessExpression/Identifier element
                            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/SyntaxList/CallExpression/CloseParenToken )
                          CommaToken
                          NullKeyword
                          CommaToken
                          StringLiteral
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/CallExpression/CloseParenToken )
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                  SemicolonToken
              CloseBraceToken
          SingleLineCommentTrivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/SingleLineCommentTrivia // TREE形式
          IfStatement
            IfKeyword
            OpenParenToken
            BinaryExpression
              PropertyAccessExpression
                Identifier - argv
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier argv
                DotToken
                Identifier - mode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier mode
              EqualsEqualsEqualsToken
              StringLiteral
            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/CloseParenToken )
            Block
              OpenBraceToken
              SyntaxList
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                      DotToken
                      Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                    OpenParenToken
                    SyntaxList
                      TemplateExpression
                        TemplateHead
                        SyntaxList
                          TemplateSpan
                            Identifier - sourcePath
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/Identifier sourcePath
                            TemplateTail
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                  SemicolonToken
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier result
                      DotToken
                      Identifier - forEach
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier forEach
                    OpenParenToken
                    SyntaxList
                      ArrowFunction
                        OpenParenToken
                        SyntaxList
                          Parameter
                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/SyntaxList/Parameter/Identifier node
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CloseParenToken )
                        EqualsGreaterThanToken
                        Block
                          OpenBraceToken
                          SyntaxList
                            IfStatement
                              IfKeyword
                              OpenParenToken
                              CallExpression
                                PropertyAccessExpression
                                  PropertyAccessExpression
                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier node
                                    DotToken
                                    Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier kind
                                  DotToken
                                  Identifier - match
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/CallExpression/PropertyAccessExpression/Identifier match
                                OpenParenToken
                                SyntaxList
                                  RegularExpressionLiteral
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/CallExpression/CloseParenToken )
                              CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/CloseParenToken )
                              Block
                                OpenBraceToken
                                SyntaxList
                                  ExpressionStatement
                                    CallExpression
                                      PropertyAccessExpression
                                        Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                                        DotToken
                                        Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                                      OpenParenToken
                                      SyntaxList
                                        TemplateExpression
                                          TemplateHead
                                          SyntaxList
                                            TemplateSpan
                                              CallExpression
                                                Identifier - indent
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/Identifier indent
                                                OpenParenToken
                                                SyntaxList
                                                  PropertyAccessExpression
                                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                                                    DotToken
                                                    Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/SyntaxList/PropertyAccessExpression/Identifier level
                                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/CloseParenToken )
                                              TemplateMiddle
                                            TemplateSpan
                                              PropertyAccessExpression
                                                Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier node
                                                DotToken
                                                Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier kind
                                              TemplateMiddle
                                            TemplateSpan
                                              ConditionalExpression
                                                PropertyAccessExpression
                                                  Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/PropertyAccessExpression/Identifier node
                                                  DotToken
                                                  Identifier - hasNodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/PropertyAccessExpression/Identifier hasNodes
                                                QuestionToken
                                                StringLiteral
                                                ColonToken
                                                CallExpression
                                                  PropertyAccessExpression
                                                    PropertyAccessExpression
                                                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier node
                                                      DotToken
                                                      Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier text
                                                    DotToken
                                                    Identifier - replace
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/CallExpression/PropertyAccessExpression/Identifier replace
                                                  OpenParenToken
                                                  SyntaxList
                                                    RegularExpressionLiteral
                                                    CommaToken
                                                    StringLiteral
                                                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/CallExpression/CloseParenToken )
                                              TemplateTail
                                      CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                    SemicolonToken
                                CloseBraceToken
                              ElseKeyword
                              IfStatement
                                IfKeyword
                                OpenParenToken
                                CallExpression
                                  PropertyAccessExpression
                                    PropertyAccessExpression
                                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier node
                                      DotToken
                                      Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/CallExpression/PropertyAccessExpression/PropertyAccessExpression/Identifier kind
                                    DotToken
                                    Identifier - match
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/CallExpression/PropertyAccessExpression/Identifier match
                                  OpenParenToken
                                  SyntaxList
                                    RegularExpressionLiteral
                                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/CallExpression/CloseParenToken )
                                CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/CloseParenToken )
                                Block
                                  OpenBraceToken
                                  SyntaxList
                                    ExpressionStatement
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                                          DotToken
                                          Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                                        OpenParenToken
                                        SyntaxList
                                          TemplateExpression
                                            TemplateHead
                                            SyntaxList
                                              TemplateSpan
                                                CallExpression
                                                  Identifier - indent
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/Identifier indent
                                                  OpenParenToken
                                                  SyntaxList
                                                    PropertyAccessExpression
                                                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                                                      DotToken
                                                      Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/SyntaxList/PropertyAccessExpression/Identifier level
                                                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/CloseParenToken )
                                                TemplateMiddle
                                              TemplateSpan
                                                PropertyAccessExpression
                                                  Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier node
                                                  DotToken
                                                  Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier kind
                                                TemplateMiddle
                                              TemplateSpan
                                                PropertyAccessExpression
                                                  Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier node
                                                  DotToken
                                                  Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier text
                                                TemplateTail
                                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                      SemicolonToken
                                  CloseBraceToken
                                ElseKeyword
                                Block
                                  OpenBraceToken
                                  SyntaxList
                                    ExpressionStatement
                                      CallExpression
                                        PropertyAccessExpression
                                          Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                                          DotToken
                                          Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                                        OpenParenToken
                                        SyntaxList
                                          TemplateExpression
                                            TemplateHead
                                            SyntaxList
                                              TemplateSpan
                                                CallExpression
                                                  Identifier - indent
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/Identifier indent
                                                  OpenParenToken
                                                  SyntaxList
                                                    PropertyAccessExpression
                                                      Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                                                      DotToken
                                                      Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/SyntaxList/PropertyAccessExpression/Identifier level
                                                  CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/CloseParenToken )
                                                TemplateMiddle
                                              TemplateSpan
                                                PropertyAccessExpression
                                                  Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier node
                                                  DotToken
                                                  Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier kind
                                                TemplateMiddle
                                              TemplateSpan
                                                ConditionalExpression
                                                  PropertyAccessExpression
                                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/PropertyAccessExpression/Identifier node
                                                    DotToken
                                                    Identifier - hasNodes
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/PropertyAccessExpression/Identifier hasNodes
                                                  QuestionToken
                                                  StringLiteral
                                                  ColonToken
                                                  PropertyAccessExpression
                                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/PropertyAccessExpression/Identifier node
                                                    DotToken
                                                    Identifier - text
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/PropertyAccessExpression/Identifier text
                                                TemplateTail
                                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/Block/SyntaxList/IfStatement/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                                      SemicolonToken
                                  CloseBraceToken
                          CloseBraceToken
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                  SemicolonToken
              CloseBraceToken
          SingleLineCommentTrivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/SingleLineCommentTrivia // Reactコンポーネント
          IfStatement
            IfKeyword
            OpenParenToken
            BinaryExpression
              PropertyAccessExpression
                Identifier - argv
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier argv
                DotToken
                Identifier - mode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier mode
              EqualsEqualsEqualsToken
              StringLiteral
            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/CloseParenToken )
            Block
              OpenBraceToken
              SyntaxList
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                      DotToken
                      Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                    OpenParenToken
                    SyntaxList
                      TemplateExpression
                        TemplateHead
                        SyntaxList
                          TemplateSpan
                            Identifier - sourcePath
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/Identifier sourcePath
                            TemplateTail
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                  SemicolonToken
                ExpressionStatement
                  CallExpression
                    Identifier - scanJsxFunctions
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/Identifier scanJsxFunctions
                    OpenParenToken
                    SyntaxList
                      Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/Identifier result
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                  SemicolonToken
              CloseBraceToken
          SingleLineCommentTrivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/SingleLineCommentTrivia // JSXエレメント
          IfStatement
            IfKeyword
            OpenParenToken
            BinaryExpression
              PropertyAccessExpression
                Identifier - argv
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier argv
                DotToken
                Identifier - mode
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier mode
              EqualsEqualsEqualsToken
              StringLiteral
            CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/CloseParenToken )
            Block
              OpenBraceToken
              SyntaxList
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier console
                      DotToken
                      Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier log
                    OpenParenToken
                    SyntaxList
                      TemplateExpression
                        TemplateHead
                        SyntaxList
                          TemplateSpan
                            Identifier - sourcePath
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/Identifier sourcePath
                            TemplateTail
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                  SemicolonToken
                VariableStatement
                  VariableDeclarationList
                    ConstKeyword
                    SyntaxList
                      VariableDeclaration
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration retval = scanJsxElements(result)
                        Identifier - retval
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/Identifier retval
                        EqualsToken
                        CallExpression
                          Identifier - scanJsxElements
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/Identifier scanJsxElements
                          OpenParenToken
                          SyntaxList
                            Identifier - result
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/SyntaxList/Identifier result
                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/VariableStatement/VariableDeclarationList/SyntaxList/VariableDeclaration/CallExpression/CloseParenToken )
                  SemicolonToken
                SingleLineCommentTrivia
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/SingleLineCommentTrivia // console.log(JSON.stringify(retval, null, '  '));
                ExpressionStatement
                  CallExpression
                    PropertyAccessExpression
                      Identifier - retval
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier retval
                      DotToken
                      Identifier - forEach
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/PropertyAccessExpression/Identifier forEach
                    OpenParenToken
                    SyntaxList
                      ArrowFunction
                        OpenParenToken
                        SyntaxList
                          Parameter
                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/SyntaxList/Parameter/Identifier node
                        CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CloseParenToken )
                        EqualsGreaterThanToken
                        CallExpression
                          PropertyAccessExpression
                            Identifier - console
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/PropertyAccessExpression/Identifier console
                            DotToken
                            Identifier - log
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/PropertyAccessExpression/Identifier log
                          OpenParenToken
                          SyntaxList
                            TemplateExpression
                              TemplateHead
                              SyntaxList
                                TemplateSpan
                                  CallExpression
                                    Identifier - indent
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/Identifier indent
                                    OpenParenToken
                                    SyntaxList
                                      PropertyAccessExpression
                                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/SyntaxList/PropertyAccessExpression/Identifier node
                                        DotToken
                                        Identifier - level
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/SyntaxList/PropertyAccessExpression/Identifier level
                                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/CallExpression/CloseParenToken )
                                  TemplateMiddle
                                TemplateSpan
                                  PropertyAccessExpression
                                    Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier node
                                    DotToken
                                    Identifier - kind
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier kind
                                  TemplateMiddle
                                TemplateSpan
                                  ConditionalExpression
                                    BinaryExpression
                                      PropertyAccessExpression
                                        Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/PropertyAccessExpression/Identifier node
                                        DotToken
                                        Identifier - name
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/PropertyAccessExpression/Identifier name
                                      ExclamationEqualsEqualsToken
                                      Identifier - undefined
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/BinaryExpression/Identifier undefined
                                    QuestionToken
                                    TemplateExpression
                                      TemplateHead
                                      SyntaxList
                                        TemplateSpan
                                          PropertyAccessExpression
                                            Identifier - node
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier node
                                            DotToken
                                            Identifier - name
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/SyntaxList/TemplateExpression/SyntaxList/TemplateSpan/ConditionalExpression/TemplateExpression/SyntaxList/TemplateSpan/PropertyAccessExpression/Identifier name
                                          TemplateTail
                                    ColonToken
                                    StringLiteral
                                  TemplateTail
                          CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/ArrowFunction/CallExpression/CloseParenToken )
                    CloseParenToken
SourceFile/SyntaxList/FunctionDeclaration/Block/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
                  SemicolonToken
              CloseBraceToken
        CloseBraceToken
    IfStatement
      IfKeyword
      OpenParenToken
      BinaryExpression
        PropertyAccessExpression
          Identifier - require
SourceFile/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier require
          DotToken
          Identifier - main
SourceFile/SyntaxList/IfStatement/BinaryExpression/PropertyAccessExpression/Identifier main
        EqualsEqualsEqualsToken
        Identifier - module
SourceFile/SyntaxList/IfStatement/BinaryExpression/Identifier module
      CloseParenToken
SourceFile/SyntaxList/IfStatement/CloseParenToken )
      Block
        OpenBraceToken
        SyntaxList
          ExpressionStatement
            CallExpression
              Identifier - main
SourceFile/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/Identifier main
              OpenParenToken
              SyntaxList
                PropertyAccessExpression
                  Identifier - process
SourceFile/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/PropertyAccessExpression/Identifier process
                  DotToken
                  Identifier - argv
SourceFile/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/SyntaxList/PropertyAccessExpression/Identifier argv
              CloseParenToken
SourceFile/SyntaxList/IfStatement/Block/SyntaxList/ExpressionStatement/CallExpression/CloseParenToken )
            SemicolonToken
        CloseBraceToken
# ts-parser.ts, src/ts-parser.ts, ---------

## imports
[]
## attentions
[
  "0 import: import fs from 'fs'; #, !intarnal",
  "1 import: import * as ts from 'typescript'; #, !intarnal",
  "2 import: import yargs from 'yargs'; #, !intarnal",
  "3 import: import { hideBin } from 'yargs/helpers'; #, !intarnal",
  "18 var: indent #, !intarnal",
  "18 paren: ( #open, !intarnal",
  "18 paren: ) #close, !intarnal",
  "18 arrow: => #arrow, !intarnal",
  "18 paren: ( #open, !intarnal",
  "18 paren: ) #close, !intarnal",
  "18 call: .fill #, !intarnal",
  "18 paren: ( #open, !intarnal",
  "18 paren: ) #close, !intarnal",
  "18 call: .join #, !intarnal",
  "18 paren: ( #open, !intarnal",
  "18 paren: ) #close, !intarnal",
  "20 func: scanAllChildren #, !export",
  "25 block: { #open, !intarnal",
  "26 var: startLine #, !intarnal",
  "26 call: ts.getLineAndCharacterOfPosition #, !intarnal",
  "26 paren: ( #open, !intarnal",
  "27 call: node.getSourceFile #, !intarnal",
  "27 paren: ( #open, !intarnal",
  "27 paren: ) #close, !intarnal",
  "28 expression: node.pos #, !intarnal",
  "29 paren: ) #close, !intarnal",
  "30 expression: node.pos #, !intarnal",
  "30 call: node.getLeadingTriviaWidth #, !intarnal",
  "30 paren: ( #open, !intarnal",
  "30 paren: ) #close, !intarnal",
  "30 block: { #open, !intarnal",
  "31 var: trivias #, !intarnal",
  "31 call: ts.getLeadingCommentRanges #, !intarnal",
  "31 paren: ( #open, !intarnal",
  "31 call: node.getFullText #, !intarnal",
  "31 paren: ( #open, !intarnal",
  "31 paren: ) #close, !intarnal",
  "31 paren: ) #close, !intarnal",
  "32 expression: ?. #, !intarnal",
  "32 call: triviasforEach #, !intarnal",
  "32 paren: ( #open, !intarnal",
  "32 paren: ( #open, !intarnal",
  "32 paren: ) #close, !intarnal",
  "32 arrow: => #arrow, !intarnal",
  "32 block: { #open, !intarnal",
  "33 var: text #, !intarnal",
  "33 call: node.getFullText #, !intarnal",
  "33 paren: ( #open, !intarnal",
  "33 paren: ) #close, !intarnal",
  "33 call: .substring #, !intarnal",
  "33 paren: ( #open, !intarnal",
  "33 expression: trivia.pos #, !intarnal",
  "33 expression: trivia.end #, !intarnal",
  "33 paren: ) #close, !intarnal",
  "34 var: commentStartLine #, !intarnal",
  "34 call: ts.getLineAndCharacterOfPosition #, !intarnal",
  "34 paren: ( #open, !intarnal",
  "35 call: node.getSourceFile #, !intarnal",
  "35 paren: ( #open, !intarnal",
  "35 paren: ) #close, !intarnal",
  "36 expression: node.pos #, !intarnal",
  "36 expression: trivia.pos #, !intarnal",
  "37 paren: ) #close, !intarnal",
  "38 var: commentEndLine #, !intarnal",
  "38 call: ts.getLineAndCharacterOfPosition #, !intarnal",
  "38 paren: ( #open, !intarnal",
  "39 call: node.getSourceFile #, !intarnal",
  "39 paren: ( #open, !intarnal",
  "39 paren: ) #close, !intarnal",
  "40 expression: node.pos #, !intarnal",
  "40 expression: trivia.pos #, !intarnal",
  "40 expression: text.length #, !intarnal",
  "41 paren: ) #close, !intarnal",
  "42 call: result.push #, !intarnal",
  "42 paren: ( #open, !intarnal",
  "42 object: { #object-open, !intarnal",
  "43 property: element #object-prop, !intarnal",
  "44 property: level #object-prop, !intarnal",
  "44 property: depth #object-prop, !intarnal",
  "45 property: kind #object-prop, !intarnal",
  "45 expression: ts.Debug #, !intarnal",
  "45 call: .formatSyntaxKind #, !intarnal",
  "45 paren: ( #open, !intarnal",
  "45 expression: trivia.kind #, !intarnal",
  "45 paren: ) #close, !intarnal",
  "46 property: line #object-prop, !intarnal",
  "46 expression: commentStartLine.line #, !intarnal",
  "47 property: endl #object-prop, !intarnal",
  "47 expression: commentEndLine.line #, !intarnal",
  "48 property: pos #object-prop, !intarnal",
  "48 expression: trivia.pos #, !intarnal",
  "48 expression: node.pos #, !intarnal",
  "49 property: end #object-prop, !intarnal",
  "49 expression: trivia.end #, !intarnal",
  "49 expression: node.pos #, !intarnal",
  "50 property: tsNode #object-prop, !intarnal",
  "50 property: node #object-prop, !intarnal",
  "51 property: text #object-prop, !intarnal",
  "52 property: hasNodes #object-prop, !intarnal",
  "53 comment: // node, #, !intarnal",
  "54 object: } #object-close, !intarnal",
  "54 paren: ) #close, !intarnal",
  "55 block: } #close, !intarnal",
  "55 paren: ) #close, !intarnal",
  "56 block: } #close, !intarnal",
  "57 var: text #, !intarnal",
  "57 call: node.getText #, !intarnal",
  "57 paren: ( #open, !intarnal",
  "57 paren: ) #close, !intarnal",
  "58 var: nextStartLine #, !intarnal",
  "58 call: ts.getLineAndCharacterOfPosition #, !intarnal",
  "58 paren: ( #open, !intarnal",
  "59 call: node.getSourceFile #, !intarnal",
  "59 paren: ( #open, !intarnal",
  "59 paren: ) #close, !intarnal",
  "60 expression: node.pos #, !intarnal",
  "60 call: node.getLeadingTriviaWidth #, !intarnal",
  "60 paren: ( #open, !intarnal",
  "60 paren: ) #close, !intarnal",
  "61 paren: ) #close, !intarnal",
  "62 var: nextEndLine #, !intarnal",
  "62 call: ts.getLineAndCharacterOfPosition #, !intarnal",
  "62 paren: ( #open, !intarnal",
  "63 call: node.getSourceFile #, !intarnal",
  "63 paren: ( #open, !intarnal",
  "63 paren: ) #close, !intarnal",
  "64 expression: node.pos #, !intarnal",
  "64 call: node.getLeadingTriviaWidth #, !intarnal",
  "64 paren: ( #open, !intarnal",
  "64 paren: ) #close, !intarnal",
  "64 expression: text.length #, !intarnal",
  "65 paren: ) #close, !intarnal",
  "66 var: kind #, !intarnal",
  "66 expression: ts.Debug #, !intarnal",
  "66 call: .formatSyntaxKind #, !intarnal",
  "66 paren: ( #open, !intarnal",
  "66 expression: node.kind #, !intarnal",
  "66 paren: ) #close, !intarnal",
  "67 var: childrend #, !intarnal",
  "67 call: node.getChildren #, !intarnal",
  "67 paren: ( #open, !intarnal",
  "67 paren: ) #close, !intarnal",
  "68 call: result.push #, !intarnal",
  "68 paren: ( #open, !intarnal",
  "68 object: { #object-open, !intarnal",
  "69 property: element #object-prop, !intarnal",
  "69 expression: childrend.length #, !intarnal",
  "70 property: level #object-prop, !intarnal",
  "70 property: depth #object-prop, !intarnal",
  "71 property: kind #object-prop, !intarnal",
  "72 property: line #object-prop, !intarnal",
  "72 expression: nextStartLine.line #, !intarnal",
  "73 property: endl #object-prop, !intarnal",
  "73 expression: nextEndLine.line #, !intarnal",
  "74 property: pos #object-prop, !intarnal",
  "74 expression: node.pos #, !intarnal",
  "74 call: node.getLeadingTriviaWidth #, !intarnal",
  "74 paren: ( #open, !intarnal",
  "74 paren: ) #close, !intarnal",
  "75 property: end #object-prop, !intarnal",
  "75 expression: node.end #, !intarnal",
  "76 property: tsNode #object-prop, !intarnal",
  "76 property: node #object-prop, !intarnal",
  "77 property: text #object-prop, !intarnal",
  "78 property: hasNodes #object-prop, !intarnal",
  "78 expression: childrend.length #, !intarnal",
  "79 comment: // node, #, !intarnal",
  "80 object: } #object-close, !intarnal",
  "80 paren: ) #close, !intarnal",
  "83 call: childrend.forEach #, !intarnal",
  "83 paren: ( #open, !intarnal",
  "83 paren: ( #open, !intarnal",
  "83 paren: ) #close, !intarnal",
  "83 arrow: => #arrow, !intarnal",
  "83 call: scanAllChildren #, !intarnal",
  "83 paren: ( #open, !intarnal",
  "83 expression: node.pos #, !intarnal",
  "83 paren: ) #close, !intarnal",
  "83 paren: ) #close, !intarnal",
  "84 block: } #close, !intarnal",
  "86 class: TreeParser #, !intarnal",
  "87 block: { #open, !intarnal",
  "88 comment: // #, !intarnal",
  "89 block: } #close, !intarnal",
  "91 paren: ( #open, !intarnal",
  "91 paren: ) #close, !intarnal",
  "91 arrow: => #arrow, !intarnal",
  "91 block: { #open, !intarnal",
  "92 var: nodes #, !intarnal",
  "92 expression: .nodes #, !intarnal",
  "93 var: node #, !intarnal",
  "94 var: j #, !intarnal",
  "94 expression: nodes.length #, !intarnal",
  "94 block: { #open, !intarnal",
  "95 var: tnode #, !intarnal",
  "96 expression: tnode.level #, !intarnal",
  "96 expression: node.level #, !intarnal",
  "96 block: { #open, !intarnal",
  "98 block: } #close, !intarnal",
  "99 block: } #close, !intarnal",
  "100 expression: nodes.length #, !intarnal",
  "101 block: } #close, !intarnal",
  "103 paren: ( #open, !intarnal",
  "103 paren: ) #close, !intarnal",
  "103 arrow: => #arrow, !intarnal",
  "103 block: { #open, !intarnal",
  "104 var: nodes #, !intarnal",
  "104 expression: .nodes #, !intarnal",
  "105 var: node #, !intarnal",
  "106 var: j #, !intarnal",
  "106 block: { #open, !intarnal",
  "107 var: tnode #, !intarnal",
  "108 expression: tnode.level #, !intarnal",
  "108 expression: node.level #, !intarnal",
  "109 expression: tnode.kind #, !intarnal",
  "109 call: .indexOf #, !intarnal",
  "109 paren: ( #open, !intarnal",
  "109 paren: ) #close, !intarnal",
  "110 block: } #close, !intarnal",
  "112 block: } #close, !intarnal",
  "114 paren: ( #open, !intarnal",
  "114 paren: ) #close, !intarnal",
  "114 arrow: => #arrow, !intarnal",
  "114 block: { #open, !intarnal",
  "115 var: nodes #, !intarnal",
  "115 expression: .nodes #, !intarnal",
  "116 var: findCore #, !intarnal",
  "116 paren: ( #open, !intarnal",
  "116 paren: ) #close, !intarnal",
  "116 arrow: => #arrow, !intarnal",
  "116 block: { #open, !intarnal",
  "117 var: node #, !intarnal",
  "118 var: j #, !intarnal",
  "118 expression: nodes.length #, !intarnal",
  "118 block: { #open, !intarnal",
  "119 var: tnode #, !intarnal",
  "120 expression: tnode.level #, !intarnal",
  "120 expression: node.level #, !intarnal",
  "121 expression: .kind #, !intarnal",
  "121 call: .indexOf #, !intarnal",
  "121 paren: ( #open, !intarnal",
  "121 paren: ) #close, !intarnal",
  "122 block: } #close, !intarnal",
  "124 block: } #close, !intarnal",
  "125 call: Array.isArray #, !intarnal",
  "125 paren: ( #open, !intarnal",
  "125 paren: ) #close, !intarnal",
  "125 block: { #open, !intarnal",
  "126 var: j #, !intarnal",
  "126 expression: kind.length #, !intarnal",
  "126 block: { #open, !intarnal",
  "127 call: findCore #, !intarnal",
  "127 paren: ( #open, !intarnal",
  "127 paren: ) #close, !intarnal",
  "129 block: } #close, !intarnal",
  "131 block: } #close, !intarnal",
  "132 call: findCore #, !intarnal",
  "132 paren: ( #open, !intarnal",
  "132 paren: ) #close, !intarnal",
  "133 block: } #close, !intarnal",
  "136 func: scanJsxFunctions #, !export",
  "136 block: { #open, !intarnal",
  "137 var: tree #, !intarnal",
  "138 var: i #, !intarnal",
  "138 expression: result.length #, !intarnal",
  "138 block: { #open, !intarnal",
  "139 var: node #, !intarnal",
  "140 expression: node.kind #, !intarnal",
  "140 block: { #open, !intarnal",
  "141 var: f #, !intarnal",
  "141 call: tree.nextFind #, !intarnal",
  "141 paren: ( #open, !intarnal",
  "141 paren: ) #close, !intarnal",
  "142 var: e #, !intarnal",
  "142 call: tree.nextFind #, !intarnal",
  "142 paren: ( #open, !intarnal",
  "142 paren: ) #close, !intarnal",
  "143 var: t #, !intarnal",
  "143 call: tree.nextFind #, !intarnal",
  "143 paren: ( #open, !intarnal",
  "143 paren: ) #close, !intarnal",
  "144 call: tree.nextFind #, !intarnal",
  "144 paren: ( #open, !intarnal",
  "144 paren: ) #close, !intarnal",
  "144 block: { #open, !intarnal",
  "145 call: console.log #, !intarnal",
  "145 paren: ( #open, !intarnal",
  "145 expression: .text #, !intarnal",
  "145 paren: ) #close, !intarnal",
  "146 block: } #close, !intarnal",
  "147 call: tree.nextFunction #, !intarnal",
  "147 paren: ( #open, !intarnal",
  "147 paren: ) #close, !intarnal",
  "148 block: } #close, !intarnal",
  "149 expression: node.kind #, !intarnal",
  "149 block: { #open, !intarnal",
  "150 var: a #, !intarnal",
  "150 call: tree.nextFind #, !intarnal",
  "150 paren: ( #open, !intarnal",
  "150 paren: ) #close, !intarnal",
  "151 block: { #open, !intarnal",
  "152 var: e #, !intarnal",
  "152 call: tree.nextFind #, !intarnal",
  "152 paren: ( #open, !intarnal",
  "152 paren: ) #close, !intarnal",
  "153 var: t #, !intarnal",
  "153 call: tree.prevFind #, !intarnal",
  "153 paren: ( #open, !intarnal",
  "153 paren: ) #close, !intarnal",
  "154 block: { #open, !intarnal",
  "156 call: tree.nextFind #, !intarnal",
  "156 paren: ( #open, !intarnal",
  "156 paren: ) #close, !intarnal",
  "157 call: tree.nextFind #, !intarnal",
  "157 paren: ( #open, !intarnal",
  "157 paren: ) #close, !intarnal",
  "158 block: { #open, !intarnal",
  "159 call: console.log #, !intarnal",
  "159 paren: ( #open, !intarnal",
  "159 expression: .text #, !intarnal",
  "159 paren: ) #close, !intarnal",
  "160 block: } #close, !intarnal",
  "161 block: } #close, !intarnal",
  "162 call: tree.nextFunction #, !intarnal",
  "162 paren: ( #open, !intarnal",
  "162 paren: ) #close, !intarnal",
  "163 block: } #close, !intarnal",
  "164 block: } #close, !intarnal",
  "165 block: } #close, !intarnal",
  "166 block: } #close, !intarnal",
  "175 func: scanJsxElements #, !export",
  "175 block: { #open, !intarnal",
  "176 var: result #, !intarnal",
  "177 var: tree #, !intarnal",
  "178 var: i #, !intarnal",
  "178 expression: nodes.length #, !intarnal",
  "178 block: { #open, !intarnal",
  "179 var: node #, !intarnal",
  "180 expression: node.kind #, !intarnal",
  "180 block: { #open, !intarnal",
  "181 call: result.push #, !intarnal",
  "181 paren: ( #open, !intarnal",
  "181 object: { #object-open, !intarnal",
  "182 property: level #object-prop, !intarnal",
  "182 expression: node.level #, !intarnal",
  "183 property: kind #object-prop, !intarnal",
  "183 expression: node.kind #, !intarnal",
  "184 object: } #object-close, !intarnal",
  "184 paren: ) #close, !intarnal",
  "185 block: } #close, !intarnal",
  "185 expression: node.kind #, !intarnal",
  "185 block: { #open, !intarnal",
  "186 var: exp #, !intarnal",
  "186 call: tree.nextFind #, !intarnal",
  "186 paren: ( #open, !intarnal",
  "186 paren: ) #close, !intarnal",
  "187 var: t #, !intarnal",
  "187 call: tree.nextFind #, !intarnal",
  "187 paren: ( #open, !intarnal",
  "187 paren: ) #close, !intarnal",
  "188 call: result.push #, !intarnal",
  "188 paren: ( #open, !intarnal",
  "188 object: { #object-open, !intarnal",
  "189 property: level #object-prop, !intarnal",
  "189 expression: node.level #, !intarnal",
  "190 property: export #object-prop, !intarnal",
  "190 property: exp #object-prop, !intarnal",
  "191 property: kind #object-prop, !intarnal",
  "191 expression: node.kind #, !intarnal",
  "192 property: name #object-prop, !intarnal",
  "192 expression: .text #, !intarnal",
  "193 object: } #object-close, !intarnal",
  "193 paren: ) #close, !intarnal",
  "194 block: } #close, !intarnal",
  "194 expression: node.kind #, !intarnal",
  "194 block: { #open, !intarnal",
  "195 var: exp #, !intarnal",
  "196 call: tree.nextFind #, !intarnal",
  "196 paren: ( #open, !intarnal",
  "196 paren: ) #close, !intarnal",
  "198 var: a #, !intarnal",
  "198 call: tree.nextFind #, !intarnal",
  "198 paren: ( #open, !intarnal",
  "198 paren: ) #close, !intarnal",
  "199 block: { #open, !intarnal",
  "200 var: t #, !intarnal",
  "200 call: tree.prevFind #, !intarnal",
  "200 paren: ( #open, !intarnal",
  "200 paren: ) #close, !intarnal",
  "201 block: { #open, !intarnal",
  "202 call: result.push #, !intarnal",
  "202 paren: ( #open, !intarnal",
  "202 object: { #object-open, !intarnal",
  "203 property: level #object-prop, !intarnal",
  "203 expression: node.level #, !intarnal",
  "204 property: export #object-prop, !intarnal",
  "204 property: exp #object-prop, !intarnal",
  "205 property: kind #object-prop, !intarnal",
  "205 expression: .kind #, !intarnal",
  "206 property: name #object-prop, !intarnal",
  "206 expression: .text #, !intarnal",
  "207 object: } #object-close, !intarnal",
  "207 paren: ) #close, !intarnal",
  "208 block: } #close, !intarnal",
  "208 block: { #open, !intarnal",
  "209 call: result.push #, !intarnal",
  "209 paren: ( #open, !intarnal",
  "209 object: { #object-open, !intarnal",
  "210 property: level #object-prop, !intarnal",
  "210 expression: node.level #, !intarnal",
  "211 property: export #object-prop, !intarnal",
  "211 property: exp #object-prop, !intarnal",
  "212 property: kind #object-prop, !intarnal",
  "212 expression: .kind #, !intarnal",
  "213 object: } #object-close, !intarnal",
  "213 paren: ) #close, !intarnal",
  "214 block: } #close, !intarnal",
  "215 block: } #close, !intarnal",
  "216 block: } #close, !intarnal",
  "216 expression: node.kind #, !intarnal",
  "216 block: { #open, !intarnal",
  "217 var: n #, !intarnal",
  "217 call: tree.nextFind #, !intarnal",
  "217 paren: ( #open, !intarnal",
  "217 paren: ) #close, !intarnal",
  "218 block: { #open, !intarnal",
  "219 call: result.push #, !intarnal",
  "219 paren: ( #open, !intarnal",
  "219 object: { #object-open, !intarnal",
  "220 property: level #object-prop, !intarnal",
  "220 expression: node.level #, !intarnal",
  "221 property: kind #object-prop, !intarnal",
  "221 expression: node.kind #, !intarnal",
  "222 property: name #object-prop, !intarnal",
  "222 expression: .text #, !intarnal",
  "223 object: } #object-close, !intarnal",
  "223 paren: ) #close, !intarnal",
  "224 block: } #close, !intarnal",
  "224 block: { #open, !intarnal",
  "225 call: result.push #, !intarnal",
  "225 paren: ( #open, !intarnal",
  "225 object: { #object-open, !intarnal",
  "226 property: level #object-prop, !intarnal",
  "226 expression: node.level #, !intarnal",
  "227 property: kind #object-prop, !intarnal",
  "227 expression: node.kind #, !intarnal",
  "228 object: } #object-close, !intarnal",
  "228 paren: ) #close, !intarnal",
  "229 block: } #close, !intarnal",
  "230 block: } #close, !intarnal",
  "230 expression: node.kind #, !intarnal",
  "230 block: { #open, !intarnal",
  "231 var: n #, !intarnal",
  "231 call: tree.nextFind #, !intarnal",
  "231 paren: ( #open, !intarnal",
  "231 paren: ) #close, !intarnal",
  "232 block: { #open, !intarnal",
  "233 call: result.push #, !intarnal",
  "233 paren: ( #open, !intarnal",
  "233 object: { #object-open, !intarnal",
  "234 property: level #object-prop, !intarnal",
  "234 expression: node.level #, !intarnal",
  "235 property: kind #object-prop, !intarnal",
  "235 expression: node.kind #, !intarnal",
  "236 property: name #object-prop, !intarnal",
  "236 expression: .text #, !intarnal",
  "237 object: } #object-close, !intarnal",
  "237 paren: ) #close, !intarnal",
  "238 block: } #close, !intarnal",
  "238 block: { #open, !intarnal",
  "239 call: result.push #, !intarnal",
  "239 paren: ( #open, !intarnal",
  "239 object: { #object-open, !intarnal",
  "240 property: level #object-prop, !intarnal",
  "240 expression: node.level #, !intarnal",
  "241 property: kind #object-prop, !intarnal",
  "241 expression: node.kind #, !intarnal",
  "242 object: } #object-close, !intarnal",
  "242 paren: ) #close, !intarnal",
  "243 block: } #close, !intarnal",
  "244 block: } #close, !intarnal",
  "245 block: } #close, !intarnal",
  "246 block: { #open, !intarnal",
  "247 var: level #, !intarnal",
  "248 call: result.map #, !intarnal",
  "248 paren: ( #open, !intarnal",
  "248 paren: ( #open, !intarnal",
  "248 paren: ) #close, !intarnal",
  "248 arrow: => #arrow, !intarnal",
  "248 block: { #open, !intarnal",
  "249 expression: level.length #, !intarnal",
  "249 call: level.push #, !intarnal",
  "249 paren: ( #open, !intarnal",
  "249 expression: node.level #, !intarnal",
  "249 paren: ) #close, !intarnal",
  "250 block: { #open, !intarnal",
  "251 expression: level.length #, !intarnal",
  "251 expression: node.level #, !intarnal",
  "251 block: { #open, !intarnal",
  "252 call: level.push #, !intarnal",
  "252 paren: ( #open, !intarnal",
  "252 expression: node.level #, !intarnal",
  "252 paren: ) #close, !intarnal",
  "253 block: } #close, !intarnal",
  "253 expression: level.length #, !intarnal",
  "253 expression: node.level #, !intarnal",
  "253 block: { #open, !intarnal",
  "254 call: level.pop #, !intarnal",
  "254 paren: ( #open, !intarnal",
  "254 paren: ) #close, !intarnal",
  "255 block: } #close, !intarnal",
  "255 block: { #open, !intarnal",
  "257 block: } #close, !intarnal",
  "258 block: } #close, !intarnal",
  "259 expression: node.level #, !intarnal",
  "259 call: level.indexOf #, !intarnal",
  "259 paren: ( #open, !intarnal",
  "259 expression: node.level #, !intarnal",
  "259 paren: ) #close, !intarnal",
  "261 block: } #close, !intarnal",
  "261 paren: ) #close, !intarnal",
  "262 block: } #close, !intarnal",
  "263 block: } #close, !intarnal",
  "265 func: main #, !intarnal",
  "265 block: { #open, !intarnal",
  "266 var: argv #, !intarnal",
  "266 call: yargs #, !intarnal",
  "266 paren: ( #open, !intarnal",
  "266 call: hideBin #, !intarnal",
  "266 paren: ( #open, !intarnal",
  "266 paren: ) #close, !intarnal",
  "266 paren: ) #close, !intarnal",
  "266 call: .detectLocale #, !intarnal",
  "267 paren: ( #open, !intarnal",
  "267 paren: ) #close, !intarnal",
  "266 call: .scriptName #, !intarnal",
  "268 paren: ( #open, !intarnal",
  "268 paren: ) #close, !intarnal",
  "266 call: .usage #, !intarnal",
  "269 paren: ( #open, !intarnal",
  "269 paren: ) #close, !intarnal",
  "266 call: .options #, !intarnal",
  "270 paren: ( #open, !intarnal",
  "270 object: { #object-open, !intarnal",
  "271 property: source #object-prop, !intarnal",
  "271 object: { #object-open, !intarnal",
  "271 property: type #object-prop, !intarnal",
  "271 property: demandOption #object-prop, !intarnal",
  "271 object: } #object-close, !intarnal",
  "272 property: mode #object-prop, !intarnal",
  "272 object: { #object-open, !intarnal",
  "273 property: choices #object-prop, !intarnal",
  "281 property: default #object-prop, !intarnal",
  "282 property: describe #object-prop, !intarnal",
  "283 property: demandOption #object-prop, !intarnal",
  "284 object: } #object-close, !intarnal",
  "285 object: } #object-close, !intarnal",
  "285 paren: ) #close, !intarnal",
  "266 call: .help #, !intarnal",
  "286 paren: ( #open, !intarnal",
  "286 paren: ) #close, !intarnal",
  "266 call: .parseSync #, !intarnal",
  "287 paren: ( #open, !intarnal",
  "287 paren: ) #close, !intarnal",
  "289 var: sourcePath #, !intarnal",
  "289 expression: argv.source #, !intarnal",
  "291 var: sourceCode #, !intarnal",
  "291 call: fs.readFileSync #, !intarnal",
  "291 paren: ( #open, !intarnal",
  "291 paren: ) #close, !intarnal",
  "291 call: .trim #, !intarnal",
  "291 paren: ( #open, !intarnal",
  "291 paren: ) #close, !intarnal",
  "293 var: sourceFile #, !intarnal",
  "293 call: ts.createSourceFile #, !intarnal",
  "293 paren: ( #open, !intarnal",
  "296 expression: ts.ScriptTarget.ES5 #, !intarnal",
  "298 paren: ) #close, !intarnal",
  "300 var: result #, !intarnal",
  "301 call: scanAllChildren #, !intarnal",
  "301 paren: ( #open, !intarnal",
  "301 paren: ) #close, !intarnal",
  "303 comment: // ソース再生成 #, !intarnal",
  "304 expression: argv.mode #, !intarnal",
  "304 block: { #open, !intarnal",
  "305 var: line #, !intarnal",
  "306 var: pre #, !intarnal",
  "307 var: pos #, !intarnal",
  "308 var: kind #, !intarnal",
  "309 call: result.forEach #, !intarnal",
  "309 paren: ( #open, !intarnal",
  "309 paren: ( #open, !intarnal",
  "309 paren: ) #close, !intarnal",
  "309 arrow: => #arrow, !intarnal",
  "309 block: { #open, !intarnal",
  "310 expression: node.element #, !intarnal",
  "310 block: { #open, !intarnal",
  "311 expression: node.line #, !intarnal",
  "311 block: { #open, !intarnal",
  "312 var: i #, !intarnal",
  "312 expression: node.line #, !intarnal",
  "312 block: { #open, !intarnal",
  "313 call: console.log #, !intarnal",
  "313 paren: ( #open, !intarnal",
  "313 paren: ) #close, !intarnal",
  "314 block: } #close, !intarnal",
  "315 expression: node.pos #, !intarnal",
  "316 block: } #close, !intarnal",
  "317 expression: node.pos #, !intarnal",
  "317 block: { #open, !intarnal",
  "318 var: i #, !intarnal",
  "318 expression: node.pos #, !intarnal",
  "318 block: { #open, !intarnal",
  "319 expression: process.stdout #, !intarnal",
  "319 call: .write #, !intarnal",
  "319 paren: ( #open, !intarnal",
  "319 paren: ) #close, !intarnal",
  "320 block: } #close, !intarnal",
  "321 block: } #close, !intarnal",
  "322 expression: node.pos #, !intarnal",
  "322 block: { #open, !intarnal",
  "323 expression: process.stdout #, !intarnal",
  "323 call: .write #, !intarnal",
  "323 paren: ( #open, !intarnal",
  "323 expression: node.text #, !intarnal",
  "323 paren: ) #close, !intarnal",
  "324 block: } #close, !intarnal",
  "325 expression: node.endl #, !intarnal",
  "326 expression: node.end #, !intarnal",
  "327 expression: node.kind #, !intarnal",
  "329 block: } #close, !intarnal",
  "330 block: } #close, !intarnal",
  "330 paren: ) #close, !intarnal",
  "331 block: } #close, !intarnal",
  "333 comment: // JSON形式 #, !intarnal",
  "334 expression: argv.mode #, !intarnal",
  "334 block: { #open, !intarnal",
  "335 call: console.log #, !intarnal",
  "335 paren: ( #open, !intarnal",
  "335 call: JSON.stringify #, !intarnal",
  "335 paren: ( #open, !intarnal",
  "335 paren: ) #close, !intarnal",
  "335 paren: ) #close, !intarnal",
  "336 block: } #close, !intarnal",
  "338 comment: // JSON形式(elementのみ) #, !intarnal",
  "339 expression: argv.mode #, !intarnal",
  "339 block: { #open, !intarnal",
  "340 call: console.log #, !intarnal",
  "340 paren: ( #open, !intarnal",
  "341 call: JSON.stringify #, !intarnal",
  "341 paren: ( #open, !intarnal",
  "342 call: result.filter #, !intarnal",
  "342 paren: ( #open, !intarnal",
  "342 paren: ( #open, !intarnal",
  "342 paren: ) #close, !intarnal",
  "342 arrow: => #arrow, !intarnal",
  "342 expression: v.element #, !intarnal",
  "342 paren: ) #close, !intarnal",
  "345 paren: ) #close, !intarnal",
  "346 paren: ) #close, !intarnal",
  "347 block: } #close, !intarnal",
  "349 comment: // TREE形式 #, !intarnal",
  "350 expression: argv.mode #, !intarnal",
  "350 block: { #open, !intarnal",
  "351 call: console.log #, !intarnal",
  "351 paren: ( #open, !intarnal",
  "351 paren: ) #close, !intarnal",
  "352 call: result.forEach #, !intarnal",
  "352 paren: ( #open, !intarnal",
  "352 paren: ( #open, !intarnal",
  "352 paren: ) #close, !intarnal",
  "352 arrow: => #arrow, !intarnal",
  "352 block: { #open, !intarnal",
  "353 expression: node.kind #, !intarnal",
  "353 call: .match #, !intarnal",
  "353 paren: ( #open, !intarnal",
  "353 paren: ) #close, !intarnal",
  "353 block: { #open, !intarnal",
  "354 call: console.log #, !intarnal",
  "354 paren: ( #open, !intarnal",
  "355 call: indent #, !intarnal",
  "355 paren: ( #open, !intarnal",
  "355 expression: node.level #, !intarnal",
  "355 paren: ) #close, !intarnal",
  "355 expression: node.kind #, !intarnal",
  "356 expression: node.hasNodes #, !intarnal",
  "356 expression: node.text #, !intarnal",
  "356 call: .replace #, !intarnal",
  "356 paren: ( #open, !intarnal",
  "356 paren: ) #close, !intarnal",
  "358 paren: ) #close, !intarnal",
  "359 block: } #close, !intarnal",
  "359 expression: node.kind #, !intarnal",
  "359 call: .match #, !intarnal",
  "359 paren: ( #open, !intarnal",
  "359 paren: ) #close, !intarnal",
  "359 block: { #open, !intarnal",
  "360 call: console.log #, !intarnal",
  "360 paren: ( #open, !intarnal",
  "360 call: indent #, !intarnal",
  "360 paren: ( #open, !intarnal",
  "360 expression: node.level #, !intarnal",
  "360 paren: ) #close, !intarnal",
  "360 expression: node.kind #, !intarnal",
  "360 expression: node.text #, !intarnal",
  "360 paren: ) #close, !intarnal",
  "361 block: } #close, !intarnal",
  "361 block: { #open, !intarnal",
  "362 call: console.log #, !intarnal",
  "362 paren: ( #open, !intarnal",
  "363 call: indent #, !intarnal",
  "363 paren: ( #open, !intarnal",
  "363 expression: node.level #, !intarnal",
  "363 paren: ) #close, !intarnal",
  "363 expression: node.kind #, !intarnal",
  "363 expression: node.hasNodes #, !intarnal",
  "363 expression: node.text #, !intarnal",
  "364 paren: ) #close, !intarnal",
  "365 block: } #close, !intarnal",
  "366 block: } #close, !intarnal",
  "366 paren: ) #close, !intarnal",
  "367 block: } #close, !intarnal",
  "369 comment: // Reactコンポーネント #, !intarnal",
  "370 expression: argv.mode #, !intarnal",
  "370 block: { #open, !intarnal",
  "371 call: console.log #, !intarnal",
  "371 paren: ( #open, !intarnal",
  "371 paren: ) #close, !intarnal",
  "372 call: scanJsxFunctions #, !intarnal",
  "372 paren: ( #open, !intarnal",
  "372 paren: ) #close, !intarnal",
  "373 block: } #close, !intarnal",
  "375 comment: // JSXエレメント #, !intarnal",
  "376 expression: argv.mode #, !intarnal",
  "376 block: { #open, !intarnal",
  "377 call: console.log #, !intarnal",
  "377 paren: ( #open, !intarnal",
  "377 paren: ) #close, !intarnal",
  "378 var: retval #, !intarnal",
  "378 call: scanJsxElements #, !intarnal",
  "378 paren: ( #open, !intarnal",
  "378 paren: ) #close, !intarnal",
  "379 comment: // console.log(JSON.stringify(retval, null, '  ')); #, !intarnal",
  "380 call: retval.forEach #, !intarnal",
  "380 paren: ( #open, !intarnal",
  "380 paren: ( #open, !intarnal",
  "380 paren: ) #close, !intarnal",
  "380 arrow: => #arrow, !intarnal",
  "381 call: console.log #, !intarnal",
  "381 paren: ( #open, !intarnal",
  "382 call: indent #, !intarnal",
  "382 paren: ( #open, !intarnal",
  "382 expression: node.level #, !intarnal",
  "382 paren: ) #close, !intarnal",
  "382 expression: node.kind #, !intarnal",
  "383 expression: node.name #, !intarnal",
  "383 expression: node.name #, !intarnal",
  "385 paren: ) #close, !intarnal",
  "386 paren: ) #close, !intarnal",
  "387 block: } #close, !intarnal",
  "388 block: } #close, !intarnal",
  "390 expression: require.main #, !intarnal",
  "390 block: { #open, !intarnal",
  "391 call: main #, !intarnal",
  "391 paren: ( #open, !intarnal",
  "391 expression: process.argv #, !intarnal",
  "391 paren: ) #close, !intarnal",
  "392 block: } #close, !intarnal"
]
